{"version":3,"sources":["webpack:///ImageInput.svelte","webpack:///CustomExtensions.svelte","webpack:///LearnMore.svelte","webpack:///ColorPicker.svelte","webpack:///./src/packager/sha256.js","webpack:///./src/common/escape-xml.js","webpack:///./src/packager/large-assets.js","webpack:///./src/packager/icns.js","webpack:///./src/packager/build-id.js","webpack:///./src/packager/base85.js","webpack:///./src/packager/plist.js","webpack:///./src/packager/colors.js","webpack:///./src/packager/adapter.js","webpack:///./src/packager/encode-big-string.js","webpack:///./src/packager/packager.js","webpack:///./src/p4/download-url.js","webpack:///Downloads.svelte","webpack:///./src/common/idb.js","webpack:///./src/p4/file-store.js","webpack:///./src/p4/preview.js","webpack:///./src/p4/deep-clone.js","webpack:///./src/packager/web/cache.js","webpack:///./src/packager/images/default-icon.png","webpack:///./src/packager/web/export.js","webpack:///./src/packager/web/adapter.js","webpack:///./src/p4/base64.js","webpack:///./src/p4/blob-serializer.js","webpack:///PackagerOptions.svelte"],"names":["replace","name","ACCEPT","dropping","url","file","previewSizes","URL","revokeObjectURL","createObjectURL","e","stopPropagation","input","document","createElement","type","accept","join","addEventListener","files","target","length","body","appendChild","click","remove","detail","dataTransfer","droppedFile","some","ext","endsWith","extensions","value","split","filter","i","slug","href","link","async","arrayBuffer","crypto","subtle","digest","rawData","Array","from","Uint8Array","map","b","toString","padStart","hash","SHA256","default","update","v","externalFile","relativeScaffolding","src","sha256","estimatedSize","scaffolding","useBuildId","addons","canvasToBlob","canvas","Promise","resolve","reject","toBlob","blob","Error","pngData","Icns","Buffer","pngDataBlob","Blob","image","Image","onload","onerror","eligibleFormats","size","format","width","height","ctx","getContext","icns","formatSize","drawImage","icnsImage","IcnsImage","fromPNG","append","data","SCAFFOLDING_BUILD_ID","getBase85EncodeCharacter","n","encode","uint8","originalLength","dataView","newUint8","Math","ceil","DataView","buffer","byteOffset","byteLength","result","resultIndex","getUint32","floor","TextDecoder","decode","xmlToValue","node","tagName","child","children","textContent","nextElementSibling","console","warn","valueToXml","doc","isArray","listItem","key","keyValue","Object","entries","keyNode","valueNode","darken","hex","rgb","parsed","parseInt","substring","red","green","blue","hexToRgb","hsv","color","r","g","x","min","max","h","s","hue","saturation","rgbToHsv","rgbToHex","f","p","q","t","hsvToRgb","Adapter","concatInPlace","destination","newItems","item","push","encodeComponent","TextEncoder","String","strings","values","encodedChunks","totalByteLength","resultBuffer","j","set","PROGRESS_FETCHED_COMPRESSED","getJSZip","setFileFast","zip","path","SELF_LICENSE","title","homepage","license","SCRATCH_LICENSE","ELECTRON_LICENSE","COPYRIGHT_HEADER","generateChromiumLicenseHTML","licenses","index","CFBundleIdentifier","CFBundleName","CFBundleDisplayName","CFBundleExecutable","CFBundleVersion","CFBundleShortVersionString","LSApplicationCategoryType","generateMacReadme","options","app","packageName","validatePackageName","BLOCKLIST","includes","constructor","super","this","project","DEFAULT_OPTIONS","aborted","used","abort","dispatchEvent","Event","ensureNotAborted","fetchLargeAsset","asset","__ASSETS__","dispatchProgress","progress","cameFromCache","cached","getCachedAsset","progressCallback","abortTarget","buildId","source","cacheAsset","getAddonOptions","chunks","specialCloudBehaviors","cloudVariables","unsafeCloudBehaviors","pause","controls","enabled","loadResources","texts","analysis","usesMusic","script","computeWindowSize","stageWidth","stageHeight","greenFlag","stopAll","getPlistPropertiesForPrimaryExecutable","windowTitle","version","updatePlist","newProperties","plist","string","rootDict","DOMParser","parseFromString","parsePlist","assign","xml","implementation","createDocument","rootNode","documentElement","setAttribute","XMLSerializer","serializeToString","generatePlist","addNwJS","projectZip","nwjsBuffer","nwjsZip","loadAsync","isWindows","startsWith","isMac","isLinux","nwjsPrefix","keys","newPath","ICON_NAME","icon","getAppIcon","manifest","main","window","dataPrefix","icnsData","startScript","unixPermissions","JSON","stringify","creditsHtmlPath","creditsHtml","addElectron","electronZip","rootPrefix","contentsPrefix","resourcesPrefix","electronMainName","electronPreloadName","iconName","mainJS","windowControls","windowMode","appearance","background","escapeBehavior","preloadJS","usesSteamworks","steamworks","appId","onError","steamworksBuffer","steamworksZip","readme","HELPERS","addWebViewMac","appZip","newAppName","parsedBackgroundColor","substr","applicationConfig","makeWebSocketProvider","cloudHost","projectId","makeLocalStorageProvider","makeCustomProvider","variables","custom","provider","Set","variableName","providerToUse","generateFilename","extension","generateGetProjectData","storageProgressStart","storageProgressEnd","getProjectDataFunction","isZip","projectData","CHUNK_SIZE","projectChunk","subarray","base85","generateFavicon","readAsURL","generateCursor","cursor","center","y","generateExtensionURLs","shouldTryToFetch","bakeExtensions","protocol","allURLs","unfetchableURLs","urlsToFetch","finalURLs","wrappedSource","fetchExtensionScript","dataURI","encodeURIComponent","package","html","csp","foreground","loadingScreen","imageMode","accent","monitors","variableColor","listColor","css","text","progressBar","resizeMode","editableLists","packagedRuntime","username","mode","fullscreen","turbo","interpolation","framerate","highQualityPen","fencing","miscLimits","maxClones","compiler","warpTimer","maxTextureDimension","closeWhenStopped","line","array","trim","js","autoplay","generateAsync","compression","platform","meta","percent","filename","getDefaultPackageNameFromFileName","toLowerCase","getWindowTitleFromFileName","pop","usesUnsafeOptions","defaultOptions","getUnsafeOptions","gamepad","pointerlock","download","toFixed","workaroundInProgress","zippedBlob","newFileName","blobURL","error","allDatabases","Database","storeName","db","dbPromise","open","indexedDB","navigator","userAgentData","test","userAgent","databases","intervalId","tryIdb","finally","setInterval","clearInterval","idbReady","then","request","onupgradeneeded","createObjectStore","keyPath","onsuccess","catch","err","close","createTransaction","readwrite","transaction","store","objectStore","deleteEverything","setTransactionErrorHandler","clear","onabort","database","makeNamedBlob","get","cloneBlob","hasQueried","unsubscribe","subscribe","put","id","delete","origin","location","windowToBlobMap","WeakMap","preview","postMessage","translate","IsDesktop","write","setContent","content","setProgress","deepClone","obj","getAssetId","getAllKeys","allValidAssetIds","keysToDelete","resolveDelete","removeExtraneous","newAdapter","assetId","debugInfo","fromCharCode","btoa","atob","charCodeAt","BLOB_IDENTIFIER","isObjectOrArray","recursivelySerializeBlobs","object","recursivelyDeserializeBlobs","ALMOST_INFINITY","visible","stageVariables","isCloud","uniqueId","variable","$options","hasSettingsStoredInProject","magic","stageComments","find","previewer","resetResult","customCursorIcon","loadingScreenImage","otherEnvironmentsInitiallyOpen","advancedOptionsInitiallyOpen","runPackager","task","packager","setProgressText","$_","thing","resetOptions","properties","current","defaults","parts","lastPart","importOptionsFromDataTransfer","newOptions","parse","deserialized","copiedDefaultOptions","mergedWithDefaults","merge","confirm","$icon","$customCursorIcon","$loadingScreenImage","$error","$progress","cleanup","round","do","done","optionsClone","exported","formattedAppName","checked"],"mappings":"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","file":"js/packager-options-ui.406410974ee37dd5b3eb.js","sourcesContent":["<script>\n  import {_} from '../locales';\n  import DropArea from './DropArea.svelte';\n\n  const ACCEPT = [\n    '.png',\n    '.jpg',\n    '.jpeg',\n    '.bmp',\n    '.svg',\n    '.ico',\n    '.gif'\n  ];\n\n  export let file;\n  export let previewSizes;\n  let dropping;\n  let url;\n\n  // This is a bit strange, there's probably a better way to do this\n  // Seems to create and revoke an extra object URL for each file for some reason\n  $: if (file) {\n    if (url) {\n      URL.revokeObjectURL(url);\n    }\n    url = URL.createObjectURL(file);\n  } else if (url) {\n    URL.revokeObjectURL(url);\n    url = null;\n  }\n\n  const clear = (e) => {\n    e.stopPropagation();\n    file = null;\n  };\n\n  const handleClickBackground = () => {\n    const input = document.createElement('input');\n    input.type = 'file';\n    input.accept = ACCEPT.join(',');\n    input.addEventListener('change', (e) => {\n      const files = e.target.files;\n      if (files.length) {\n        file = files[0];\n      } else {\n        file = null;\n      }\n    });\n    document.body.appendChild(input);\n    input.click();\n    input.remove();\n  };\n\n  const handleDrop = ({detail: dataTransfer}) => {\n    const droppedFile = dataTransfer.files[0];\n    if (ACCEPT.some((ext) => droppedFile.name.endsWith(ext))) {\n      file = droppedFile;\n    }\n  };\n</script>\n\n<style>\n  .container {\n    background: transparent;\n    color: #555;\n    width: 100%;\n    box-sizing: border-box;\n    border: 3px dashed currentColor;\n    transition: .2s border-color, .2s color;\n    border-radius: 20px;\n    min-height: 90px;\n    font: inherit;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n    overflow: hidden;\n    position: relative;\n    cursor: pointer;\n    padding: 4px;\n  }\n  :global([theme=\"dark\"]) .container {\n    color: #aaa;\n  }\n  .dropping,\n  .container:focus-visible,\n  .container:active {\n    color: rgb(79, 123, 211);\n  }\n  :global([theme=\"dark\"]) .dropping,\n  :global([theme=\"dark\"]) .container:focus-visible,\n  :global([theme=\"dark\"]) .container:active {\n    color: rgb(178, 195, 228);\n  }\n  .placeholder {\n    font-size: 1.5em;\n  }\n  .selected {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-wrap: wrap;\n  }\n  .selected > *:not(:last-child) {\n    margin-right: 12px;\n  }\n</style>\n\n<DropArea bind:dropping={dropping} on:drop={handleDrop}>\n  <button class=\"container\" class:dropping on:click={handleClickBackground}>\n    {#if file}\n      <div class=\"selected\">\n        {#each previewSizes as size}\n          <!-- svelte-ignore a11y-missing-attribute -->\n          <img src={url} width={size[0]} height={size[1]}>\n        {/each}\n        <div>{$_('fileInput.selected').replace('{file}', file.name)}</div>\n        <button on:click={clear}>{$_('fileInput.clear')}</button>\n      </div>\n    {:else}\n      <div class=\"placeholder\">{$_('fileInput.select')}</div>\n    {/if}\n  </button>\n</DropArea>\n","<script>\n  export let extensions;\n</script>\n\n<style>\n  textarea {\n    box-sizing: border-box;\n    width: 100%;\n    min-width: 100%;\n    height: 100px;\n  }\n</style>\n\n<textarea\n  value={extensions.join('\\n')}\n  on:change={(e) => {\n    extensions = e.target.value.split('\\n').filter(i => i);\n  }}\n></textarea>\n","<script>\n  import {_} from '../locales/';\n\n  export let slug;\n  export let href;\n\n  const link = slug ? `https://docs.turbowarp.org/${slug}` : href;\n</script>\n\n<style>\n  a {\n    text-decoration: none;\n  }\n  a:hover {\n    text-decoration: underline;\n  }\n</style>\n\n<a href={link} title={$_('options.learnMore')} target=\"_blank\" rel=\"noopener noreferrer\">(?)</a>\n","<script>\n  export let value;\n</script>\n\n<input type=\"color\" bind:value />\n","const sha256 = async (arrayBuffer) => {\n  // Use the browser's builtin SHA-256 if possible.\n  // This API might not exist if we're not a secure context or in versions of Node that aren't even that old,\n  // so we also have a pure JS fallback.\n  if (typeof crypto === 'object' && crypto.subtle && crypto.subtle.digest) {\n    const rawData = await crypto.subtle.digest('SHA-256', arrayBuffer);\n    return Array.from(new Uint8Array(rawData)).map(b => b.toString(16).padStart(2, '0')).join('');\n  }\n\n  // The checksum will be performed on the main thread and may take a while.\n  const SHA256 = (await import(/* webpackChunkName: \"sha256\" */ 'sha.js/sha256')).default;\n  const hash = new SHA256();\n  // new Uint8Array() is necessary to make this work in Node\n  hash.update(new Uint8Array(arrayBuffer));\n  return hash.digest('hex');\n};\n\nexport default sha256;\n","const escapeXML = (v) => v.replace(/[\"'<>&]/g, (i) => {\n  switch (i) {\n    case '\"': return '&quot;';\n    case '\\'': return '&apos;';\n    case '<': return '&lt;';\n    case '>': return '&gt;';\n    case '&': return '&amp;';\n  }\n});\n\nexport default escapeXML;\n","// This defines where files are fetched from when the packager needs to download files.\n// Files fetched from an external server have a SHA-256 checksum used to validate the download.\n\n// src is the URL that will be fetched to download the asset. If it's an array of URLs, each URL\n// will be tried in succession if the previous one fails, perhaps because it's blocked by a school\n// network filter.\n\n// estimatedSize is used for the asset download progress bar if the server doesn't specify a\n// Content-Length. It's size in bytes after decoding Content-Encoding. Real size does not need to\n// match; this is just for the progress bar. estimatedSize is optional and can be omitted.\n// Make sure to use size estimates from production builds, not development ones.\n\n// useBuildId is used for various cache related things. It shouldn't be changed.\n\nconst externalFile = (name) => [\n  // Hopefully one of these URLs will not be blocked.\n  `https://packagerdata.turbowarp.org/${name}`,\n  `https://blobs.turbowarp.xyz/${name}`\n];\n\nconst relativeScaffolding = (name) => `scaffolding/${name}`;\n\nexport default {\n  'nwjs-win64': {\n    src: externalFile('nwjs-v0.68.1-win-x64.zip'),\n    sha256: '82527d29f060bad7ec041f7c0536b1376f8bad5e5584adf7e3cf7205755a106c',\n    estimatedSize: 119821598\n  },\n  'nwjs-win32': {\n    src: externalFile('nwjs-v0.68.1-win-ia32.zip'),\n    sha256: '7dd3104c2726082a8acd8973af2b2b223bc97960b722ec141b9bf07d84a0281b',\n    estimatedSize: 112613344\n  },\n  'nwjs-mac': {\n    src: externalFile('nwjs-v0.68.1-osx-x64.zip'),\n    sha256: '4b1356302738a45f7ee212f6ecb997eb5d31403bfc45a7dd58429c968a1f581a',\n    estimatedSize: 119091132\n  },\n  'nwjs-linux-x64': {\n    src: externalFile('nwjs-v0.68.1-linux-x64.zip'),\n    sha256: '5f597add1a2b6f13592117cc955111cea8211c13b21165e29c6616f385df5b94',\n    estimatedSize: 135854818\n  },\n  'electron-win32': {\n    src: externalFile('electron-v22.3.27-win32-ia32.zip'),\n    sha256: '47bd498e5513529c5e141394fc9fd610cba1dcdea9e6dbb165edf929cbfd9af2',\n    estimatedSize: 90856612\n  },\n  'electron-win64': {\n    src: externalFile('electron-v22.3.27-win32-x64.zip'),\n    sha256: '1a02c0f7af9664696f790dcce05948f0458a2f4f2d48c685f911d2eb99a4c9da',\n    estimatedSize: 96605498\n  },\n  'electron-win-arm': {\n    src: externalFile('electron-v22.3.27-win32-arm64.zip'),\n    sha256: '0e4ad218018c0881ef4de363107a94dd2ced40367a0e18ca7d0dde1f40da0531',\n    estimatedSize: 94065344\n  },\n  'electron-mac': {\n    src: externalFile('electron-v22.3.27-macos-universal.zip'),\n    sha256: '598b35f9030fe30f81b4041be048cd0374f675bd1bc0f172c26cf2808e80a3d9',\n    estimatedSize: 160882083\n  },\n  'electron-linux64': {\n    src: externalFile('electron-v22.3.27-linux-x64.zip'),\n    sha256: '631d8eb08098c48ce2b29421e74c69ac0312b1e42f445d8a805414ba1242bf3a',\n    estimatedSize: 93426892\n  },\n  'electron-linux-arm32': {\n    src: externalFile('electron-v22.3.27-linux-armv7l.zip'),\n    sha256: '9f8372606e5ede83cf1c73a3d8ff07047e4e3ef614aa89a76cd497dc06cf119d',\n    estimatedSize: 82722572\n  },\n  'electron-linux-arm64': {\n    src: externalFile('electron-v22.3.27-linux-arm64.zip'),\n    sha256: '60279395a5ce4eaf3c08f1e717771b203830902d3fe3a7c311bc37deb1a0e15e',\n    estimatedSize: 93932512\n  },\n  'webview-mac': {\n    src: externalFile('WebView-macos-5.zip'),\n    sha256: 'b5636571cd9be2aae2f6dac1ab090fdf829c8fdfe91f462cc2feb2d324705f9f',\n    estimatedSize: 3425601\n  },\n  'steamworks.js': {\n    src: externalFile('steamworks.js-0.3.2.zip'),\n    sha256: 'fd8bc80a97cd880d71113dfc5f81b124b6e212335393db73e3df168c5c546fbc',\n    estimatedSize: 3279554,\n  },\n  scaffolding: {\n    src: relativeScaffolding('scaffolding-full.js'),\n    estimatedSize: 4564032,\n    useBuildId: true\n  },\n  'scaffolding-min': {\n    src: relativeScaffolding('scaffolding-min.js'),\n    estimatedSize: 2530463,\n    useBuildId: true\n  },\n  addons: {\n    src: relativeScaffolding('addons.js'),\n    estimatedSize: 19931,\n    useBuildId: true\n  }\n};\n","import {readAsArrayBuffer} from '../common/readers';\n\nconst loadImage = (src) => new Promise((resolve, reject) => {\n  const image = new Image();\n  image.onload = () => resolve(image);\n  image.onerror = () => reject(new Error(`Could not load image: ${src}`));\n  image.src = src;\n});\n\nconst canvasToBlob = (canvas) => new Promise((resolve, reject) => {\n  canvas.toBlob((blob) => {\n    if (blob) {\n      resolve(blob);\n    } else {\n      reject(new Error('Could not read <canvas> as blob'));\n    }\n  });\n});\n\nconst pngToAppleICNS = async (pngData) => {\n  const {\n    Icns,\n    Buffer\n  } = await import(/* webpackChunkName: \"icns\" */ './icns-bundle');\n\n  const FORMATS = [\n    { type: 'ic04', size: 16 },\n    { type: 'ic07', size: 128 },\n    { type: 'ic08', size: 256 },\n    { type: 'ic09', size: 512 },\n    { type: 'ic10', size: 1024 },\n    { type: 'ic11', size: 32 },\n    { type: 'ic12', size: 64 },\n    { type: 'ic13', size: 256 },\n    { type: 'ic14', size: 512 },\n  ];\n\n  // Read the Image.\n  const pngDataBlob = new Blob([pngData], {\n    type: 'image/png'\n  });\n  const url = URL.createObjectURL(pngDataBlob);\n  const image = await loadImage(url);\n\n  // Determine the formats to create\n  const eligibleFormats = FORMATS.filter((format) => {\n    // Always include the smallest size so that tiny images will get at least 1 image.\n    if (format.size === 16) {\n      return true;\n    }\n    return image.width >= format.size && image.height >= format.size;\n  });\n\n  // Create a single canvas to be used for conversion\n  // Creating many canvases is prone to error in Safari\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n  if (!ctx) {\n    throw new Error('cannot get canvas rendering context');\n  }\n\n  const icns = new Icns.Icns();\n  for (const format of eligibleFormats) {\n    // Use the canvas to scale the image.\n    const formatSize = format.size;\n    canvas.width = formatSize;\n    canvas.height = formatSize;\n    ctx.drawImage(image, 0, 0, formatSize, formatSize);\n\n    const blob = await canvasToBlob(canvas);\n    const arrayBuffer = await readAsArrayBuffer(blob);\n    const icnsImage = await Icns.IcnsImage.fromPNG(Buffer.from(arrayBuffer), format.type);\n    icns.append(icnsImage);\n  }\n\n  return icns.data;\n};\n\nexport default pngToAppleICNS;\n","const SCAFFOLDING_BUILD_ID = process.env.SCAFFOLDING_BUILD_ID;\n\nconst verifyBuildId = (buildId, source) => {\n  if (source.endsWith('=^..^=')) {\n    return source.endsWith(`${buildId} =^..^=`);\n  }\n  return true;\n};\n\nexport {\n  SCAFFOLDING_BUILD_ID as buildId,\n  verifyBuildId\n};\n","// This implements a custom base85 encoding for improved efficiency compared to base64.\n// The character set used is 0x2a - 0x7e of ASCII. Little endian.\n\n// 0x3c (<) is replaced with 0x28 (opening parenthesis) and 0x3e (>) is replaced with 0x29 (closing parenthesis),\n// which makes the encoded data safe to include in any HTML context without escapes.\n\nconst getBase85EncodeCharacter = (n) => {\n  n += 0x2a;\n  if (n === 0x3c) return 0x28;\n  if (n === 0x3e) return 0x29;\n  return n;\n};\n\n/**\n * @param {Uint8Array} uint8 The data to encode. No assumptions made about backing buffer.\n * @returns {string} Base 85 encoding\n */\nexport const encode = (uint8) => {\n  const originalLength = uint8.length;\n\n  // Data length needs to be a multiple of 4 so we can use getUint32.\n  // If it's not, we'll have to make a copy and pad with zeros.\n  let dataView;\n  if (originalLength % 4 !== 0) {\n    const newUint8 = new Uint8Array(Math.ceil(originalLength / 4) * 4);\n    for (let i = 0; i < originalLength; i++) {\n      newUint8[i] = uint8[i];\n    }\n    dataView = new DataView(newUint8.buffer);\n  } else {\n    dataView = new DataView(uint8.buffer, uint8.byteOffset, uint8.byteLength);\n  }\n\n  // Pre-allocating buffer and using TextDecoder at the end is faster than string concatenation\n  // Each set of 4 bytes is represented by 5 characters. Pad with zeros if needed.\n  const result = new Uint8Array(Math.ceil(originalLength / 4) * 5);\n  let resultIndex = 0;\n\n  for (let i = 0; i < dataView.byteLength; i += 4) {\n    let n = dataView.getUint32(i, true);\n    result[resultIndex++] = getBase85EncodeCharacter(n % 85);\n    n = Math.floor(n / 85);\n    result[resultIndex++] = getBase85EncodeCharacter(n % 85);\n    n = Math.floor(n / 85);\n    result[resultIndex++] = getBase85EncodeCharacter(n % 85);\n    n = Math.floor(n / 85);\n    result[resultIndex++] = getBase85EncodeCharacter(n % 85);\n    n = Math.floor(n / 85);\n    result[resultIndex++] = getBase85EncodeCharacter(n % 85);\n  }\n\n  return new TextDecoder().decode(result);\n};\n\n// Keep the base85 decode function up-to-date in packager.js\n\nconst getBase85DecodeValue = (code) => {\n  if (code === 0x28) code = 0x3c;\n  if (code === 0x29) code = 0x3e;\n  return code - 0x2a;\n};\n\n/**\n * @param {string} str Base 85 data\n * @param {ArrayBuffer} outBuffer Assumed to have a byteLength that is a multiple of 4\n * @param {number} outOffset Assumed to have be a multiple of 4\n */\nexport const decode = (str, outBuffer, outOffset) => {\n  const view = new DataView(outBuffer, outOffset, Math.floor(str.length / 5 * 4));\n  for (let i = 0, j = 0; i < str.length; i += 5, j += 4) {\n    view.setUint32(j, (\n      getBase85DecodeValue(str.charCodeAt(i + 4)) * 85 * 85 * 85 * 85 +\n      getBase85DecodeValue(str.charCodeAt(i + 3)) * 85 * 85 * 85 +\n      getBase85DecodeValue(str.charCodeAt(i + 2)) * 85 * 85 +\n      getBase85DecodeValue(str.charCodeAt(i + 1)) * 85 +\n      getBase85DecodeValue(str.charCodeAt(i))\n    ), true);\n  }\n};\n","// Parses and generates Apple Info.plist files\n// Example file:\n/*\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n<dict>\n  <key>BuildMachineOSBuild</key>\n  <string>20F71</string>\n  <key>CFBundleDevelopmentRegion</key>\n  <string>en</string>\n  <key>CFBundleExecutable</key>\n  <string>WebView</string>\n  <key>CFBundleIconFile</key>\n  <string>AppIcon</string>\n  <key>CFBundleIconName</key>\n  <string>AppIcon</string>\n  <key>CFBundleIdentifier</key>\n  <string>org.turbowarp.webviews.mac</string>\n  <key>CFBundleInfoDictionaryVersion</key>\n  <string>6.0</string>\n  <key>CFBundleName</key>\n  <string>WebView</string>\n  <key>CFBundlePackageType</key>\n  <string>APPL</string>\n  <key>CFBundleShortVersionString</key>\n  <string>1.0</string>\n  <key>CFBundleSupportedPlatforms</key>\n  <array>\n    <string>MacOSX</string>\n  </array>\n  <key>CFBundleVersion</key>\n  <string>1</string>\n  <key>DTCompiler</key>\n  <string>com.apple.compilers.llvm.clang.1_0</string>\n  <key>DTPlatformBuild</key>\n  <string>12E507</string>\n  <key>DTPlatformName</key>\n  <string>macosx</string>\n  <key>DTPlatformVersion</key>\n  <string>11.3</string>\n  <key>DTSDKBuild</key>\n  <string>20E214</string>\n  <key>DTSDKName</key>\n  <string>macosx11.3</string>\n  <key>DTXcode</key>\n  <string>1251</string>\n  <key>DTXcodeBuild</key>\n  <string>12E507</string>\n  <key>LSApplicationCategoryType</key>\n  <string>public.app-category.games</string>\n  <key>LSMinimumSystemVersion</key>\n  <string>10.12</string>\n  <key>NSMainStoryboardFile</key>\n  <string>Main</string>\n  <key>NSPrincipalClass</key>\n  <string>NSApplication</string>\n  <key>ExampleBooleanTrue</key>\n  <true/>\n  <key>ExampleBooleanFalse</key>\n  <false/>\n</dict>\n</plist>\n*/\n\nconst xmlToValue = (node) => {\n  if (node.tagName === 'dict') {\n    const result = {};\n    for (const child of node.children) {\n      if (child.tagName === 'key') {\n        result[child.textContent] = xmlToValue(child.nextElementSibling);\n      }\n    }\n    return result;\n  } else if (node.tagName === 'array') {\n    return Array.from(node.children).map(xmlToValue);\n  } else if (node.tagName === 'string') {\n    return node.textContent;\n  } else if (node.tagName === 'true') {\n    return true;\n  } else if (node.tagName === 'false') {\n    return false;\n  }\n  console.warn('unknown plist xml', node);\n  return null;\n};\n\nconst valueToXml = (doc, value) => {\n  if (Array.isArray(value)) {\n    const node = doc.createElement('array');\n    for (const listItem of value) {\n      node.appendChild(valueToXml(doc, listItem));\n    }\n    return node;\n  } else if (typeof value === 'object') {\n    const node = doc.createElement('dict');\n    for (const [key, keyValue] of Object.entries(value)) {\n      const keyNode = doc.createElement('key');\n      keyNode.textContent = key;\n      const valueNode = valueToXml(doc, keyValue);\n      node.appendChild(keyNode);\n      node.appendChild(valueNode);\n    }\n    return node;\n  } else if (typeof value === 'string') {\n    const node = doc.createElement('string');\n    node.textContent = value;\n    return node;\n  } else if (typeof value === 'boolean') {\n    const node = doc.createElement(value.toString());\n    return node;\n  }\n  console.warn('unknown plist value', value);\n  return valueToXml(doc, `${value}`);\n};\n\nexport const parsePlist = (string) => {\n  const xml = new DOMParser().parseFromString(string, 'text/xml');\n  const rootNode = xml.children[0];\n  const rootDict = rootNode.children[0];\n  return xmlToValue(rootDict);\n};\n\nexport const generatePlist = (values) => {\n  const xml = document.implementation.createDocument(null, \"plist\");\n  const rootNode = xml.documentElement;\n  rootNode.setAttribute('version', '1.0');\n  rootNode.appendChild(valueToXml(xml, values));\n  const serialized = new XMLSerializer().serializeToString(xml);\n  return `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n${serialized}`;\n};\n","// RGB <-> HSV conversion functions are based on https://github.com/LLK/scratch-vm/blob/develop/src/util/color.js\n\n/**\n * @typedef RGB\n * @property {number} red red [0-255]\n * @property {number} green green [0-255]\n * @property {number} blue blue [0-255]\n */\n\n/**\n * @typedef HSV\n * @property {number} hue hue [0-360)\n * @property {number} saturation saturation [0-1]\n * @property {number} value value [0-1]\n */\n\n/**\n * @param {string} hex\n * @returns {RGB}\n */\n export const hexToRgb = (hex) => {\n  const parsed = parseInt(hex.substring(1), 16);\n  return {\n    red: (parsed >> 16) & 0xff,\n    green: (parsed >> 8) & 0xff,\n    blue: parsed & 0xff\n  };\n};\n\n/**\n * @param {RGB} color\n * @returns {string}\n */\nexport const rgbToHex = (color) => {\n  const format = (n) => n.toString(16).padStart(2, '0');\n  return `#${format(color.red)}${format(color.green)}${format(color.blue)}`;\n};\n\n/**\n * @param {RGB} color\n * @returns {HSV}\n */\nexport const rgbToHsv = (color) => {\n  const r = color.red / 255;\n  const g = color.green / 255;\n  const b = color.blue / 255;\n\n  const x = Math.min(Math.min(r, g), b);\n  const v = Math.max(Math.max(r, g), b);\n\n  // For grays, hue will be arbitrarily reported as zero. Otherwise, calculate\n  let h = 0;\n  let s = 0;\n  if (x !== v) {\n    const f = r === x ? g - b : g === x ? b - r : r - g;\n    const i = r === x ? 3 : g === x ? 5 : 1;\n    h = ((i - f / (v - x)) * 60) % 360;\n    s = (v - x) / v;\n  }\n\n  return {\n    hue: h,\n    saturation: s,\n    value: v\n  };\n};\n\n/**\n * @param {HSV} color\n * @returns {RGB}\n */\nexport const hsvToRgb = (color) => {\n  let h = color.hue % 360;\n  if (h < 0) h += 360;\n\n  const s = Math.max(0, Math.min(color.saturation, 1));\n  const v = Math.max(0, Math.min(color.value, 1));\n\n  const i = Math.floor(h / 60);\n  const f = h / 60 - i;\n  const p = v * (1 - s);\n  const q = v * (1 - s * f);\n  const t = v * (1 - s * (1 - f));\n\n  let r;\n  let g;\n  let b;\n\n  switch (i) {\n    default:\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return {\n    red: Math.floor(r * 255),\n    green: Math.floor(g * 255),\n    blue: Math.floor(b * 255),\n  };\n};\n\n/**\n * @param {string} hex\n * @returns {string}\n */\nexport const darken = (hex) => {\n  const rgb = hexToRgb(hex);\n  const hsv = rgbToHsv(rgb);\n\n  // don't need to clamp value; hsvToRgb will do it for us\n  hsv.value -= 0.1;\n\n  const newRgb = hsvToRgb(hsv);\n  return rgbToHex(newRgb);\n};\n","export let Adapter = null;\n\nexport const setAdapter = (newAdapter) => {\n  Adapter = newAdapter;\n};\n","/**\n * @template T\n * @param {T[]} destination\n * @param {T[]} newItems\n */\nconst concatInPlace = (destination, newItems) => {\n  for (const item of newItems) {\n    destination.push(item);\n  }\n};\n\n/**\n * @param {unknown} value String, number, Uint8Array, etc. or a recursive array of them\n * @returns {Uint8Array[]} UTF-8 arrays, in order\n */\nconst encodeComponent = (value) => {\n  if (typeof value === 'string') {\n    return [\n      new TextEncoder().encode(value)\n    ];\n  } else if (typeof value === 'number' || typeof value === 'boolean' || typeof value === 'undefined' || value === null) {\n    return [\n      new TextEncoder().encode(String(value))\n    ];\n  } else if (Array.isArray(value)) {\n    const result = [];\n    for (const i of value) {\n      concatInPlace(result, encodeComponent(i));\n    }\n    return result;\n  } else {\n    throw new Error(`Unknown value in encodeComponent: ${value}`);\n  }\n};\n\n/**\n * Tagged template function to generate encoded UTF-8 without string concatenation as Chrome cannot handle\n * strings that are longer than 0x1fffffe8 characters.\n * @param {TemplateStringsArray} strings\n * @param {unknown[]} values\n * @returns {Uint8Array}\n */\nconst encodeBigString = (strings, ...values) => {\n  /** @type {Uint8Array[]} */\n  const encodedChunks = [];\n\n  for (let i = 0; i < strings.length - 1; i++) {\n    concatInPlace(encodedChunks, encodeComponent(strings[i]));\n    concatInPlace(encodedChunks, encodeComponent(values[i]));\n  }\n  concatInPlace(encodedChunks, encodeComponent(strings[strings.length - 1]));\n\n  let totalByteLength = 0;\n  for (let i = 0; i < encodedChunks.length; i++) {\n    totalByteLength += encodedChunks[i].byteLength;\n  }\n\n  const resultBuffer = new Uint8Array(totalByteLength);\n  for (let i = 0, j = 0; i < encodedChunks.length; i++) {\n    resultBuffer.set(encodedChunks[i], j);\n    j += encodedChunks[i].byteLength;\n  }\n  return resultBuffer;\n};\n\nexport default encodeBigString;\n","import {EventTarget, CustomEvent} from '../common/event-target';\nimport sha256 from './sha256';\nimport escapeXML from '../common/escape-xml';\nimport largeAssets from './large-assets';\nimport request from '../common/request';\nimport pngToAppleICNS from './icns';\nimport {buildId, verifyBuildId} from './build-id';\nimport {encode} from './base85';\nimport {parsePlist, generatePlist} from './plist';\nimport {APP_NAME, WEBSITE, COPYRIGHT_NOTICE, ACCENT_COLOR} from './brand';\nimport {OutdatedPackagerError} from '../common/errors';\nimport {darken} from './colors';\nimport {Adapter} from './adapter';\nimport encodeBigString from './encode-big-string';\n\nconst PROGRESS_LOADED_SCRIPTS = 0.1;\n\n// Used by environments that fetch the entire compressed project before calling loadProject()\nconst PROGRESS_FETCHED_COMPRESSED = 0.75;\nconst PROGRESS_EXTRACTED_COMPRESSED = 0.98;\n\n// Used by environments that pass a project.json into loadProject() and fetch assets separately\nconst PROGRESS_FETCHED_PROJECT_JSON = 0.2;\nconst PROGRESS_FETCHED_ASSETS = 0.98;\n\nconst removeUnnecessaryEmptyLines = (string) => string.split('\\n')\n  .filter((line, index, array) => {\n    if (index === 0 || index === array.length - 1) return true;\n    if (line.trim().length === 0 && array[index - 1].trim().length === 0) return false;\n    return true;\n  })\n  .join('\\n');\n\nexport const getJSZip = async () => (await import(/* webpackChunkName: \"jszip\" */ '@turbowarp/jszip')).default;\n\nconst setFileFast = (zip, path, data) => {\n  zip.files[path] = data;\n};\n\nconst SELF_LICENSE = {\n  title: APP_NAME,\n  homepage: WEBSITE,\n  license: COPYRIGHT_NOTICE\n};\n\nconst SCRATCH_LICENSE = {\n  title: 'Scratch',\n  homepage: 'https://scratch.mit.edu/',\n  license: `Copyright (c) 2016, Massachusetts Institute of Technology\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.`\n};\n\nconst ELECTRON_LICENSE = {\n  title: 'Electron',\n  homepage: 'https://www.electronjs.org/',\n  license: `Copyright (c) Electron contributors\nCopyright (c) 2013-2020 GitHub Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.`\n};\n\nconst COPYRIGHT_HEADER = `/*!\nParts of this script are from the ${APP_NAME} <${WEBSITE}>, licensed as follows:\n${SELF_LICENSE.license}\n\nParts of this script are from Scratch <https://scratch.mit.edu/>, licensed as follows:\n${SCRATCH_LICENSE.license}\n*/\\n`;\n\nconst generateChromiumLicenseHTML = (licenses) => {\n  const style = `<style>body { font-family: sans-serif; }</style>`;\n  const pretext = `<h2>The following entries were added by the ${APP_NAME}</h2>`;\n  const convertedLicenses = licenses.map((({title, license, homepage}, index) => `\n<div class=\"product\">\n<span class=\"title\">${escapeXML(title)}</span>\n<span class=\"homepage\"><a href=\"${escapeXML(homepage)}\">homepage</a></span>\n<input type=\"checkbox\" hidden id=\"p4-${index}\">\n<label class=\"show\" for=\"p4-${index}\" tabindex=\"0\"></label>\n<div class=\"licence\">\n<pre>${escapeXML(license)}</pre>\n</div>\n</div>\n`));\n  return `${style}${pretext}${convertedLicenses.join('\\n')}`;\n};\n\n// Unique identifier for the app. If this changes, things like local cloud variables will be lost.\n// This should be in reverse-DNS format.\n// https://developer.apple.com/documentation/bundleresources/information_property_list/cfbundleidentifier\nconst CFBundleIdentifier = 'CFBundleIdentifier';\n// Even if you fork the packager, you shouldn't change this string unless you want packaged macOS apps\n// to lose all their data.\nconst bundleIdentifierPrefix = 'org.turbowarp.packager.userland.';\n\n// CFBundleName is displayed in the menu bar.\n// I'm not actually sure where CFBundleDisplayName is displayed.\n// Documentation says that CFBundleName is only supposed to be 15 characters and that CFBundleDisplayName\n// should be used for longer names, but in reality CFBundleName seems to not have a length limit.\n// https://developer.apple.com/documentation/bundleresources/information_property_list/cfbundlename\n// https://developer.apple.com/documentation/bundleresources/information_property_list/cfbundledisplayname\nconst CFBundleName = 'CFBundleName';\nconst CFBundleDisplayName = 'CFBundleDisplayName';\n\n// The name of the executable in the .app/Contents/MacOS folder\n// https://developer.apple.com/documentation/bundleresources/information_property_list/cfbundleexecutable\nconst CFBundleExecutable = 'CFBundleExecutable';\n\n// macOS's \"About\" screen will display: \"Version {CFBundleShortVersionString} ({CFBundleVersion})\"\n// Apple's own apps are inconsistent about what they display here. Some apps set both of these to the same thing\n// so you see eg. \"Version 15.0 (15.0)\" while others set CFBundleShortVersionString to a semver-like and\n// treat CFBundleVersion as a simple build number eg. \"Version 1.4.0 (876)\"\n// Apple's documentation says both of these are supposed to be major.minor.patch, but in reality it doesn't\n// even have to contain numbers and everything seems to work fine.\n// https://developer.apple.com/documentation/bundleresources/information_property_list/cfbundleversion\n// https://developer.apple.com/documentation/bundleresources/information_property_list/cfbundleshortversionstring\nconst CFBundleVersion = 'CFBundleVersion';\nconst CFBundleShortVersionString = 'CFBundleShortVersionString';\n\n// Describes the category of the app\n// https://developer.apple.com/documentation/bundleresources/information_property_list/lsapplicationcategorytype\nconst LSApplicationCategoryType = 'LSApplicationCategoryType';\n\nconst generateMacReadme = (options) => `When you try to double click on the app to run it, you will probably see this warning:\n\"${options.app.packageName} cannot be opened because the developer cannot be verified.\"\nThis is normal. Press cancel.\n\nTo run the app:\n1) Control+click on the app file (${options.app.packageName} in the same folder as this document) and select \"Open\".\n2) If a warning appears, select \"Open\" if it's an option.\n3) If a warning appears but \"Open\" isn't an option, press \"Cancel\" and repeat from step 1.\n   The open button will appear the second time the warning appears.\n\nAfter completing these steps, the app should run without any further warnings.\n\nFeel free to drag the app into your Applications folder.\n`;\n\n/**\n * @param {string} packageName\n */\nconst validatePackageName = (packageName) => {\n  // Characters considered unsafe filenames on Windows\n  const BLOCKLIST = ['/', '\\\\', ':', '*', '?', '<', '>', '|'];\n  if (BLOCKLIST.some((i) => packageName.includes(i))) {\n    throw new Error(`Invalid package name: ${packageName}. It must not use the characters: ${BLOCKLIST.join(' ')}`)\n  }\n};\n\nclass Packager extends EventTarget {\n  constructor () {\n    super();\n    this.project = null;\n    this.options = Packager.DEFAULT_OPTIONS();\n    this.aborted = false;\n    this.used = false;\n  }\n\n  abort () {\n    if (!this.aborted) {\n      this.aborted = true;\n      this.dispatchEvent(new Event('abort'));\n    }\n  }\n\n  ensureNotAborted () {\n    if (this.aborted) {\n      throw new Error('Aborted');\n    }\n  }\n\n  async fetchLargeAsset (name, type) {\n    this.ensureNotAborted();\n    const asset = largeAssets[name];\n    if (!asset) {\n      throw new Error(`Invalid asset: ${name}`);\n    }\n    if (typeof __ASSETS__ !== 'undefined' && __ASSETS__[asset.src]) {\n      return __ASSETS__[asset.src];\n    }\n    const dispatchProgress = (progress) => this.dispatchEvent(new CustomEvent('large-asset-fetch', {\n      detail: {\n        asset: name,\n        progress\n      }\n    }));\n    dispatchProgress(0);\n    let result;\n    let cameFromCache = false;\n    try {\n      const cached = await Adapter.getCachedAsset(asset);\n      if (cached) {\n        result = cached;\n        cameFromCache = true;\n        dispatchProgress(0.5);\n      }\n    } catch (e) {\n      console.warn(e);\n    }\n    if (!result) {\n      let url = asset.src;\n      if (asset.useBuildId) {\n        url += `?${buildId}`;\n      }\n      result = await request({\n        url,\n        type,\n        estimatedSize: asset.estimatedSize,\n        progressCallback: (progress) => {\n          dispatchProgress(progress);\n        },\n        abortTarget: this\n      });\n    }\n    if (asset.useBuildId && !verifyBuildId(buildId, result)) {\n      throw new OutdatedPackagerError('Build ID does not match.');\n    }\n    if (asset.sha256) {\n      const hash = await sha256(result);\n      if (hash !== asset.sha256) {\n        throw new Error(`Hash mismatch for ${name}, found ${hash} but expected ${asset.sha256}`);\n      }\n    }\n    if (!cameFromCache) {\n      try {\n        await Adapter.cacheAsset(asset, result);\n      } catch (e) {\n        console.warn(e);\n      }\n    }\n    dispatchProgress(1);\n    return result;\n  }\n\n  getAddonOptions () {\n    return {\n      ...this.options.chunks,\n      specialCloudBehaviors: this.options.cloudVariables.specialCloudBehaviors,\n      unsafeCloudBehaviors: this.options.cloudVariables.unsafeCloudBehaviors,\n      pause: this.options.controls.pause.enabled\n    };\n  }\n\n  async loadResources () {\n    const texts = [COPYRIGHT_HEADER];\n    if (this.project.analysis.usesMusic) {\n      texts.push(await this.fetchLargeAsset('scaffolding', 'text'));\n    } else {\n      texts.push(await this.fetchLargeAsset('scaffolding-min', 'text'));\n    }\n    if (Object.values(this.getAddonOptions()).some((i) => i)) {\n      texts.push(await this.fetchLargeAsset('addons', 'text'));\n    }\n    this.script = texts.join('\\n').replace(/<\\/script>/g,\"</scri'+'pt>\");\n  }\n\n  computeWindowSize () {\n    let width = this.options.stageWidth;\n    let height = this.options.stageHeight;\n    if (\n      this.options.controls.greenFlag.enabled ||\n      this.options.controls.stopAll.enabled ||\n      this.options.controls.pause.enabled\n    ) {\n      height += 48;\n    }\n    return {width, height};\n  }\n\n  getPlistPropertiesForPrimaryExecutable () {\n    return {\n      [CFBundleIdentifier]: `${bundleIdentifierPrefix}${this.options.app.packageName}`,\n\n      // For simplicity, we'll set these to the same thing\n      [CFBundleName]: this.options.app.windowTitle,\n      [CFBundleDisplayName]: this.options.app.windowTitle,\n\n      // We do rename the executable\n      [CFBundleExecutable]: this.options.app.packageName,\n\n      // For simplicity, we'll set these to the same thing\n      [CFBundleVersion]: this.options.app.version,\n      [CFBundleShortVersionString]: this.options.app.version,\n\n      // Most items generated by the packager are games\n      [LSApplicationCategoryType]: 'public.app-category.games'\n    };\n  }\n\n  async updatePlist (zip, name, newProperties) {\n    const contents = await zip.file(name).async('string');\n    const plist = parsePlist(contents);\n    Object.assign(plist, newProperties);\n    zip.file(name, generatePlist(plist));\n  }\n\n  async addNwJS (projectZip) {\n    const packageName = this.options.app.packageName;\n    validatePackageName(packageName);\n\n    const nwjsBuffer = await this.fetchLargeAsset(this.options.target, 'arraybuffer');\n    const nwjsZip = await (await getJSZip()).loadAsync(nwjsBuffer);\n\n    const isWindows = this.options.target.startsWith('nwjs-win');\n    const isMac = this.options.target === 'nwjs-mac';\n    const isLinux = this.options.target.startsWith('nwjs-linux');\n\n    // NW.js Windows folder structure:\n    // * (root)\n    // +-- nwjs-v0.49.0-win-x64\n    //   +-- nw.exe (executable)\n    //   +-- credits.html\n    //   +-- (project data)\n    //   +-- ...\n\n    // NW.js macOS folder structure:\n    // * (root)\n    // +-- nwjs-v0.49.0-osx-64\n    //   +-- credits.html\n    //   +-- nwjs.app\n    //     +-- Contents\n    //       +-- Resources\n    //         +-- app.icns (icon)\n    //         +-- app.nw\n    //           +-- (project data)\n    //       +-- MacOS\n    //         +-- nwjs (executable)\n    //       +-- ...\n\n    // the first folder, something like \"nwjs-v0.49.0-win-64\"\n    const nwjsPrefix = Object.keys(nwjsZip.files)[0].split('/')[0];\n\n    const zip = new (await getJSZip());\n\n    // Copy NW.js files to the right place\n    for (const path of Object.keys(nwjsZip.files)) {\n      const file = nwjsZip.files[path];\n\n      let newPath = path.replace(nwjsPrefix, packageName);\n      if (isWindows) {\n        newPath = newPath.replace('nw.exe', `${packageName}.exe`);\n      } else if (isMac) {\n        newPath = newPath.replace('nwjs.app', `${packageName}.app`);\n      } else if (isLinux) {\n        newPath = newPath.replace(/nw$/, packageName);\n      }\n\n      setFileFast(zip, newPath, file);\n    }\n\n    const ICON_NAME = 'icon.png';\n    const icon = await Adapter.getAppIcon(this.options.app.icon);\n    const manifest = {\n      name: packageName,\n      main: 'main.js',\n      version: this.options.app.version,\n      window: {\n        width: this.computeWindowSize().width,\n        height: this.computeWindowSize().height,\n        icon: ICON_NAME\n      }\n    };\n\n    let dataPrefix;\n    if (isWindows) {\n      dataPrefix = `${packageName}/`;\n    } else if (isMac) {\n      zip.file(`${packageName}/How to run ${packageName}.txt`, generateMacReadme(this.options));\n\n      const icnsData = await pngToAppleICNS(icon);\n      zip.file(`${packageName}/${packageName}.app/Contents/Resources/app.icns`, icnsData);\n      dataPrefix = `${packageName}/${packageName}.app/Contents/Resources/app.nw/`;\n    } else if (isLinux) {\n      const startScript = `#!/bin/bash\ncd \"$(dirname \"$0\")\"\n./${packageName}`;\n      zip.file(`${packageName}/start.sh`, startScript, {\n        unixPermissions: 0o100755\n      });\n      dataPrefix = `${packageName}/`;\n    }\n\n    // Copy project files and extra NW.js files to the right place\n    for (const path of Object.keys(projectZip.files)) {\n      setFileFast(zip, dataPrefix + path, projectZip.files[path]);\n    }\n    zip.file(dataPrefix + ICON_NAME, icon);\n    zip.file(dataPrefix + 'package.json', JSON.stringify(manifest, null, 4));\n    zip.file(dataPrefix + 'main.js', `\n    const start = () => nw.Window.open('index.html', {\n      position: 'center',\n      new_instance: true\n    });\n    nw.App.on('open', start);\n    start();`);\n\n    const creditsHtmlPath = `${packageName}/credits.html`;\n    const creditsHtml = await zip.file(creditsHtmlPath).async('string');\n    zip.file(creditsHtmlPath, creditsHtml + generateChromiumLicenseHTML([\n      SELF_LICENSE,\n      SCRATCH_LICENSE\n    ]));\n\n    return zip;\n  }\n\n  async addElectron (projectZip) {\n    const packageName = this.options.app.packageName;\n    validatePackageName(packageName);\n\n    const buffer = await this.fetchLargeAsset(this.options.target, 'arraybuffer');\n    const electronZip = await (await getJSZip()).loadAsync(buffer);\n\n    const isWindows = this.options.target.includes('win');\n    const isMac = this.options.target.includes('mac');\n    const isLinux = this.options.target.includes('linux');\n\n    // See https://www.electronjs.org/docs/latest/tutorial/application-distribution#manual-distribution\n\n    // Electron Windows/Linux folder structure:\n    // * (root)\n    // +-- electron.exe (executable)\n    // +-- resources\n    //    +-- default_app.asar (we will delete this)\n    //    +-- app (we will create this)\n    //      +-- index.html and the other project files (we will create this)\n    // +-- LICENSES.chromium.html and everything else\n\n    // Electron macOS folder structure:\n    // * (root)\n    // +-- Electron.app\n    //    +-- Contents\n    //      +-- Info.plist (we must update)\n    //      +-- MacOS\n    //        +-- Electron (executable)\n    //      +-- Frameworks\n    //        +-- Electron Helper.app\n    //          +-- Contents\n    //            +-- Info.plist (we must update)\n    //        +-- Electron Helper (GPU).app\n    //          +-- Contents\n    //            +-- Info.plist (we must update)\n    //        +-- Electron Helper (Renderer).app\n    //          +-- Contents\n    //            +-- Info.plist (we must update)\n    //        +-- Electron Helper (Plugin).app\n    //          +-- Contents\n    //            +-- Info.plist (we must update)\n    //        +-- and several other helpers which we won't touch\n    //      +-- Resources\n    //        +-- default_app.asar (we will delete this)\n    //        +-- electron.icns (we will update this)\n    //        +-- app (we will create this)\n    //          +-- index.html and the other project files (we will create this)\n    // +-- LICENSES.chromium.html and other license files\n\n    const zip = new (await getJSZip());\n    for (const path of Object.keys(electronZip.files)) {\n      const file = electronZip.files[path];\n\n      // On Windows and Linux, make an inner folder inside the zip. Zip extraction tools will sometimes make\n      // a mess if you don't make an inner folder.\n      // On macOS, the .app is already itself a folder already and macOS will always make a folder for the\n      // extracted files if there's multiple files at the root.\n      let newPath;\n      if (isMac) {\n        newPath = path;\n      } else {\n        newPath = `${packageName}/${path}`;\n      }\n\n      if (isWindows) {\n        newPath = newPath.replace('electron.exe', `${packageName}.exe`);\n      } else if (isMac) {\n        newPath = newPath.replace('Electron.app', `${packageName}.app`);\n        newPath = newPath.replace(/Electron$/, packageName);\n      } else if (isLinux) {\n        newPath = newPath.replace(/electron$/, packageName);\n      }\n\n      setFileFast(zip, newPath, file);\n    }\n\n    const rootPrefix = isMac ? '' : `${packageName}/`;\n\n    const creditsHtml = await zip.file(`${rootPrefix}LICENSES.chromium.html`).async('string');\n    zip.file(`${rootPrefix}licenses.html`, creditsHtml + generateChromiumLicenseHTML([\n      SELF_LICENSE,\n      SCRATCH_LICENSE,\n      ELECTRON_LICENSE\n    ]));\n\n    zip.remove(`${rootPrefix}LICENSE.txt`);\n    zip.remove(`${rootPrefix}LICENSES.chromium.html`);\n    zip.remove(`${rootPrefix}LICENSE`);\n    zip.remove(`${rootPrefix}version`);\n    zip.remove(`${rootPrefix}resources/default_app.asar`);\n\n    const contentsPrefix = isMac ? `${rootPrefix}${packageName}.app/Contents/` : rootPrefix;\n    const resourcesPrefix = isMac ? `${contentsPrefix}Resources/app/` : `${contentsPrefix}resources/app/`;\n    const electronMainName = 'electron-main.js';\n    const electronPreloadName = 'electron-preload.js';\n    const iconName = 'icon.png';\n\n    const icon = await Adapter.getAppIcon(this.options.app.icon);\n    zip.file(`${resourcesPrefix}${iconName}`, icon);\n\n    const manifest = {\n      name: packageName,\n      main: electronMainName,\n      version: this.options.app.version\n    };\n    zip.file(`${resourcesPrefix}package.json`, JSON.stringify(manifest, null, 4));\n\n    let mainJS = `'use strict';\nconst {app, BrowserWindow, Menu, shell, screen, dialog, ipcMain} = require('electron');\nconst path = require('path');\n\nconst isWindows = process.platform === 'win32';\nconst isMac = process.platform === 'darwin';\nconst isLinux = process.platform === 'linux';\n\nif (isMac) {\n  Menu.setApplicationMenu(Menu.buildFromTemplate([\n    { role: 'appMenu' },\n    { role: 'fileMenu' },\n    { role: 'editMenu' },\n    { role: 'windowMenu' },\n    { role: 'help' }\n  ]));\n} else {\n  Menu.setApplicationMenu(null);\n}\n\nconst resourcesURL = Object.assign(new URL('file://'), {\n  pathname: path.join(__dirname, '/')\n}).href;\nconst defaultProjectURL = new URL('./index.html', resourcesURL).href;\n\nconst createWindow = (windowOptions) => {\n  const options = {\n    title: ${JSON.stringify(this.options.app.windowTitle)},\n    icon: path.resolve(__dirname, ${JSON.stringify(iconName)}),\n    useContentSize: true,\n    webPreferences: {\n      sandbox: true,\n      contextIsolation: true,\n      nodeIntegration: false,\n      preload: path.resolve(__dirname, ${JSON.stringify(electronPreloadName)}),\n    },\n    frame: ${this.options.app.windowControls !== 'frameless'},\n    show: true,\n    width: ${this.options.stageWidth},\n    height: ${this.options.stageHeight},\n    ...windowOptions,\n  };\n\n  const activeScreen = screen.getDisplayNearestPoint(screen.getCursorScreenPoint());\n  const bounds = activeScreen.workArea;\n  options.x = bounds.x + ((bounds.width - options.width) / 2);\n  options.y = bounds.y + ((bounds.height - options.height) / 2);\n\n  const window = new BrowserWindow(options);\n  return window;\n};\n\nconst createProjectWindow = (url) => {\n  const windowMode = ${JSON.stringify(this.options.app.windowMode)};\n  const options = {\n    show: false,\n    backgroundColor: ${JSON.stringify(this.options.appearance.background)},\n    width: ${this.computeWindowSize().width},\n    height: ${this.computeWindowSize().height},\n    minWidth: 50,\n    minHeight: 50,\n  };\n  // fullscreen === false disables fullscreen on macOS so only set this property when it's true\n  if (windowMode === 'fullscreen') {\n    options.fullscreen = true;\n  }\n  const window = createWindow(options);\n  if (windowMode === 'maximize') {\n    window.maximize();\n  }\n  window.loadURL(url);\n  window.show();\n};\n\nconst createDataWindow = (dataURI) => {\n  const window = createWindow({});\n  window.loadURL(dataURI);\n};\n\nconst isResourceURL = (url) => {\n  try {\n    const parsedUrl = new URL(url);\n    return parsedUrl.protocol === 'file:' && parsedUrl.href.startsWith(resourcesURL);\n  } catch (e) {\n    // ignore\n  }\n  return false;\n};\n\nconst SAFE_PROTOCOLS = [\n  'https:',\n  'http:',\n  'mailto:',\n];\n\nconst isSafeOpenExternal = (url) => {\n  try {\n    const parsedUrl = new URL(url);\n    return SAFE_PROTOCOLS.includes(parsedUrl.protocol);\n  } catch (e) {\n    // ignore\n  }\n  return false;\n};\n\nconst isDataURL = (url) => {\n  try {\n    const parsedUrl = new URL(url);\n    return parsedUrl.protocol === 'data:';\n  } catch (e) {\n    // ignore\n  }\n  return false;\n};\n\nconst openLink = (url) => {\n  if (isDataURL(url)) {\n    createDataWindow(url);\n  } else if (isResourceURL(url)) {\n    createProjectWindow(url);\n  } else if (isSafeOpenExternal(url)) {\n    shell.openExternal(url);\n  }\n};\n\nconst createProcessCrashMessage = (details) => {\n  let message = details.type ? details.type + ' child process' : 'Renderer process';\n  message += ' crashed: ' + details.reason + ' (' + details.exitCode + ')\\\\n\\\\n';\n  if (process.arch === 'ia32') {\n    message += 'Usually this means the project was too big for the 32-bit Electron environment or your computer is out of memory. Ask the creator to use the 64-bit environment instead.';\n  } else {\n    message += 'Usually this means your computer is out of memory.';\n  }\n  return message;\n};\n\napp.on('render-process-gone', (event, webContents, details) => {\n  const window = BrowserWindow.fromWebContents(webContents);\n  dialog.showMessageBoxSync(window, {\n    type: 'error',\n    title: 'Error',\n    message: createProcessCrashMessage(details)\n  });\n});\n\napp.on('child-process-gone', (event, details) => {\n  dialog.showMessageBoxSync({\n    type: 'error',\n    title: 'Error',\n    message: createProcessCrashMessage(details)\n  });\n});\n\napp.on('web-contents-created', (event, contents) => {\n  contents.setWindowOpenHandler((details) => {\n    setImmediate(() => {\n      openLink(details.url);\n    });\n    return {action: 'deny'};\n  });\n  contents.on('will-navigate', (e, url) => {\n    if (!isResourceURL(url)) {\n      e.preventDefault();\n      openLink(url);\n    }\n  });\n  contents.on('before-input-event', (e, input) => {\n    const window = BrowserWindow.fromWebContents(contents);\n    if (!window || input.type !== \"keyDown\") return;\n    if (input.key === 'F11' || (input.key === 'Enter' && input.alt)) {\n      window.setFullScreen(!window.isFullScreen());\n    } else if (input.key === 'Escape') {\n      const behavior = ${JSON.stringify(this.options.app.escapeBehavior)};\n      if (window.isFullScreen() && (behavior === 'unfullscreen-only' || behavior === 'unfullscreen-or-exit')) {\n        window.setFullScreen(false);\n      } else if (behavior === 'unfullscreen-or-exit' || behavior === 'exit-only') {\n        window.close();\n      }\n    }\n  });\n});\n\napp.on('session-created', (session) => {\n  session.webRequest.onBeforeRequest({\n    urls: [\"file://*\"]\n  }, (details, callback) => {\n    callback({\n      cancel: !details.url.startsWith(resourcesURL)\n    });\n  });\n});\n\napp.on('window-all-closed', () => {\n  app.quit();\n});\n\napp.whenReady().then(() => {\n  createProjectWindow(defaultProjectURL);\n});\n`;\n\n    let preloadJS = `'use strict';\nconst {contextBridge, ipcRenderer} = require('electron');\n`;\n\n    if (\n      this.project.analysis.usesSteamworks &&\n      ['electron-win64', 'electron-linux64', 'electron-mac'].includes(this.options.target)\n    ) {\n      mainJS += `\n      const enableSteamworks = () => {\n        const APP_ID = +${JSON.stringify(this.options.steamworks.appId)};\n        const steamworks = require('./steamworks.js/');\n\n        const client = steamworks.init(APP_ID);\n\n        const async = (event, callback) => ipcMain.handle(event, (e, ...args) => {\n          return callback(...args);\n        });\n        const sync = (event, callback) => ipcMain.on(event, (e, ...args) => {\n          e.returnValue = callback(...args);\n        });\n\n        async('Steamworks.achievement.activate', (achievement) => client.achievement.activate(achievement));\n        async('Steamworks.achievement.clear', (achievement) => client.achievement.clear(achievement));\n        sync('Steamworks.achievement.isActivated', (achievement) => client.achievement.isActivated(achievement));\n        sync('Steamworks.apps.isDlcInstalled', (dlc) => client.apps.isDlcInstalled(dlc));\n        sync('Steamworks.localplayer.getName', () => client.localplayer.getName());\n        sync('Steamworks.localplayer.getLevel', () => client.localplayer.getLevel());\n        sync('Steamworks.localplayer.getIpCountry', () => client.localplayer.getIpCountry());\n        sync('Steamworks.localplayer.getSteamId', () => client.localplayer.getSteamId());\n        async('Steamworks.overlay.activateToWebPage', (url) => client.overlay.activateToWebPage(url));\n\n        steamworks.electronEnableSteamOverlay();\n        sync('Steamworks.ok', () => true);\n      };\n\n      try {\n        enableSteamworks();\n      } catch (e) {\n        console.error(e);\n        ipcMain.on('Steamworks.ok', (e) => {\n          e.returnValue = false;\n        });\n        app.whenReady().then(() => {\n          const ON_ERROR = ${JSON.stringify(this.options.steamworks.onError)};\n          const window = BrowserWindow.getAllWindows()[0];\n          if (ON_ERROR === 'warning') {\n            dialog.showMessageBox(window, {\n              type: 'error',\n              message: 'Error initializing Steamworks: ' + e,\n            });\n          } else if (ON_ERROR === 'error') {\n            dialog.showMessageBoxSync(window, {\n              type: 'error',\n              message: 'Error initializing Steamworks: ' + e,\n            });\n            app.quit();\n          }\n        });\n      }`;\n\n      preloadJS += `\n      const enableSteamworks = () => {\n        const sync = (event) => (...args) => ipcRenderer.sendSync(event, ...args);\n        const async = (event) => (...args) => ipcRenderer.invoke(event, ...args);\n\n        contextBridge.exposeInMainWorld('Steamworks', {\n          ok: sync('Steamworks.ok'),\n          achievement: {\n            activate: async('Steamworks.achievement.activate'),\n            clear: async('Steamworks.achievement.clear'),\n            isActivated: sync('Steamworks.achievement.isActivated'),\n          },\n          apps: {\n            isDlcInstalled: async('Steamworks.apps.isDlcInstalled'),\n          },\n          leaderboard: {\n            uploadScore: async('Steamworks.leaderboard.uploadScore'),\n          },\n          localplayer: {\n            getName: sync('Steamworks.localplayer.getName'),\n            getLevel: sync('Steamworks.localplayer.getLevel'),\n            getIpCountry: sync('Steamworks.localplayer.getIpCountry'),\n            getSteamId: sync('Steamworks.localplayer.getSteamId'),\n          },\n          overlay: {\n            activateToWebPage: async('Steamworks.overlay.activateToWebPage'),\n          },\n        });\n      };\n      enableSteamworks();`;\n\n      const steamworksBuffer = await this.fetchLargeAsset('steamworks.js', 'arraybuffer');\n      const steamworksZip = await (await getJSZip()).loadAsync(steamworksBuffer);\n      for (const [path, file] of Object.entries(steamworksZip.files)) {\n        const newPath = path.replace(/^package\\//, 'steamworks.js/');\n        setFileFast(zip, `${resourcesPrefix}${newPath}`, file);\n      }\n    }\n\n    zip.file(`${resourcesPrefix}${electronMainName}`, mainJS);\n    zip.file(`${resourcesPrefix}${electronPreloadName}`, preloadJS);\n\n    for (const [path, data] of Object.entries(projectZip.files)) {\n      setFileFast(zip, `${resourcesPrefix}${path}`, data);\n    }\n\n    if (isWindows) {\n      const readme = [\n        '1) Extract the whole zip',\n        `2) Open \"${packageName}.exe\" to start the app.`,\n        'Open \"licenses.html\" for information regarding open source software used by the app.',\n      ].join('\\n\\n');\n      zip.file(`${rootPrefix}README.txt`, readme);\n    } else if (isMac) {\n      zip.file(`How to run ${this.options.app.packageName}.txt`, generateMacReadme(this.options));\n\n      const plist = this.getPlistPropertiesForPrimaryExecutable();\n      await this.updatePlist(zip, `${contentsPrefix}Info.plist`, plist);\n\n      // macOS Electron apps also contain several helper apps that we should update.\n      const HELPERS = [\n        'Electron Helper',\n        'Electron Helper (GPU)',\n        'Electron Helper (Renderer)',\n        'Electron Helper (Plugin)',\n      ];\n      for (const name of HELPERS) {\n        await this.updatePlist(zip, `${contentsPrefix}Frameworks/${name}.app/Contents/Info.plist`, {\n          // In the prebuilt Electron binaries on GitHub, the original app has a CFBundleIdentifier of\n          // com.github.Electron and all the helpers have com.github.Electron.helper\n          [CFBundleIdentifier]: `${plist[CFBundleIdentifier]}.helper`,\n\n          // We shouldn't change the actual name of the helpers because we don't actually rename their .app\n          // We also don't rename the executable\n          [CFBundleDisplayName]: name.replace('Electron', this.options.app.packageName),\n\n          // electron-builder always updates the helpers to use the same version as the app itself\n          [CFBundleVersion]: this.options.app.version,\n          [CFBundleShortVersionString]: this.options.app.version,\n        });\n      }\n\n      const icns = await pngToAppleICNS(icon);\n      zip.file(`${contentsPrefix}Resources/electron.icns`, icns);\n    } else if (isLinux) {\n      // Some Linux distributions can't easily open the executable file from the GUI, so we'll add a simple wrapper that people can use instead.\n      const startScript = `#!/bin/bash\ncd \"$(dirname \"$0\")\"\n./${packageName}`;\n      zip.file(`${rootPrefix}start.sh`, startScript, {\n        unixPermissions: 0o100755\n      });\n    }\n\n    return zip;\n  }\n\n  async addWebViewMac (projectZip) {\n    validatePackageName(this.options.app.packageName);\n\n    const buffer = await this.fetchLargeAsset(this.options.target, 'arraybuffer');\n    const appZip = await (await getJSZip()).loadAsync(buffer);\n\n    // +-- WebView.app\n    //   +-- Contents\n    //     +-- Info.plist\n    //     +-- MacOS\n    //       +-- WebView (executable)\n    //     +-- Resources\n    //       +-- index.html\n    //       +-- application_config.json\n    //       +-- AppIcon.icns\n\n    const newAppName = `${this.options.app.packageName}.app`;\n    const contentsPrefix = `${newAppName}/Contents/`;\n    const resourcesPrefix = `${newAppName}/Contents/Resources/`;\n\n    const zip = new (await getJSZip());\n    for (const [path, data] of Object.entries(appZip.files)) {\n      const newPath = path\n        // Rename the .app itself\n        .replace('WebView.app', newAppName)\n        // Rename the executable\n        .replace(/WebView$/, this.options.app.packageName);\n      setFileFast(zip, newPath, data);\n    }\n    for (const [path, data] of Object.entries(projectZip.files)) {\n      setFileFast(zip, `${resourcesPrefix}${path}`, data);\n    }\n\n    const icon = await Adapter.getAppIcon(this.options.app.icon);\n    const icns = await pngToAppleICNS(icon);\n    zip.file(`${resourcesPrefix}AppIcon.icns`, icns);\n    zip.remove(`${resourcesPrefix}Assets.car`);\n\n    const parsedBackgroundColor = parseInt(this.options.appearance.background.substr(1), 16);\n    const applicationConfig = {\n      title: this.options.app.windowTitle,\n      background: [\n        // R, G, B [0-255]\n        parsedBackgroundColor >> 16 & 0xff,\n        parsedBackgroundColor >> 8 & 0xff,\n        parsedBackgroundColor & 0xff,\n        // A [0-1]\n        1\n      ],\n      width: this.computeWindowSize().width,\n      height: this.computeWindowSize().height\n    };\n    zip.file(`${resourcesPrefix}application_config.json`, JSON.stringify(applicationConfig));\n\n    await this.updatePlist(zip, `${contentsPrefix}Info.plist`, this.getPlistPropertiesForPrimaryExecutable());\n\n    zip.file(`How to run ${this.options.app.packageName}.txt`, generateMacReadme(this.options));\n\n    return zip;\n  }\n\n  makeWebSocketProvider () {\n    // If using the default turbowarp.org server, we'll add a fallback for the turbowarp.xyz alias.\n    // This helps work around web filters as turbowarp.org can be blocked for games and turbowarp.xyz uses\n    // a problematic TLD. These are the same server and same variables, just different domain.\n    const cloudHost = this.options.cloudVariables.cloudHost === 'wss://clouddata.turbowarp.org' ? [\n      'wss://clouddata.turbowarp.org',\n      'wss://clouddata.turbowarp.xyz'\n    ] : this.options.cloudVariables.cloudHost;\n    return `new Scaffolding.Cloud.WebSocketProvider(${JSON.stringify(cloudHost)}, ${JSON.stringify(this.options.projectId)})`;\n  }\n\n  makeLocalStorageProvider () {\n    return `new Scaffolding.Cloud.LocalStorageProvider(${JSON.stringify(`cloudvariables:${this.options.projectId}`)})`;\n  }\n\n  makeCustomProvider () {\n    const variables = this.options.cloudVariables.custom;\n    let result = '{const providers = {};\\n';\n    for (const provider of new Set(Object.values(variables))) {\n      if (provider === 'ws') {\n        result += `providers.ws = ${this.makeWebSocketProvider()};\\n`;\n      } else if (provider === 'local') {\n        result += `providers.local = ${this.makeLocalStorageProvider()};\\n`;\n      }\n    }\n    result += 'for (const provider of Object.values(providers)) scaffolding.addCloudProvider(provider);\\n';\n    for (const variableName of Object.keys(variables)) {\n      const providerToUse = variables[variableName];\n      result += `scaffolding.addCloudProviderOverride(${JSON.stringify(variableName)}, providers[${JSON.stringify(providerToUse)}] || null);\\n`;\n    }\n    result += '}';\n    return result;\n  }\n\n  generateFilename (extension) {\n    return `${this.options.app.windowTitle}.${extension}`;\n  }\n\n  async generateGetProjectData () {\n    const result = [];\n    let getProjectDataFunction = '';\n    let isZip = false;\n    let storageProgressStart;\n    let storageProgressEnd;\n\n    if (this.options.target === 'html') {\n      isZip = this.project.type !== 'blob';\n      storageProgressStart = PROGRESS_FETCHED_COMPRESSED;\n      storageProgressEnd = PROGRESS_EXTRACTED_COMPRESSED;\n\n      const projectData = new Uint8Array(this.project.arrayBuffer);\n\n      // keep this up-to-date with base85.js\n      result.push(`\n      <script>\n      const getBase85DecodeValue = (code) => {\n        if (code === 0x28) code = 0x3c;\n        if (code === 0x29) code = 0x3e;\n        return code - 0x2a;\n      };\n      const base85decode = (str, outBuffer, outOffset) => {\n        const view = new DataView(outBuffer, outOffset, Math.floor(str.length / 5 * 4));\n        for (let i = 0, j = 0; i < str.length; i += 5, j += 4) {\n          view.setUint32(j, (\n            getBase85DecodeValue(str.charCodeAt(i + 4)) * 85 * 85 * 85 * 85 +\n            getBase85DecodeValue(str.charCodeAt(i + 3)) * 85 * 85 * 85 +\n            getBase85DecodeValue(str.charCodeAt(i + 2)) * 85 * 85 +\n            getBase85DecodeValue(str.charCodeAt(i + 1)) * 85 +\n            getBase85DecodeValue(str.charCodeAt(i))\n          ), true);\n        }\n      };\n      let projectDecodeBuffer = new ArrayBuffer(${Math.ceil(projectData.length / 4) * 4});\n      let projectDecodeIndex = 0;\n      const decodeChunk = (size) => {\n        try {\n          base85decode(document.currentScript.getAttribute(\"data\"), projectDecodeBuffer, projectDecodeIndex);\n          document.currentScript.remove();\n          projectDecodeIndex += size;\n          setProgress(interpolate(${PROGRESS_LOADED_SCRIPTS}, ${PROGRESS_FETCHED_COMPRESSED}, projectDecodeIndex / ${projectData.length}));\n        } catch (e) {\n          handleError(e);\n        }\n      };\n      </script>`);\n\n      // To avoid unnecessary padding, this should be a multiple of 4.\n      const CHUNK_SIZE = 1024 * 64;\n\n      for (let i = 0; i < projectData.length; i += CHUNK_SIZE) {\n        const projectChunk = projectData.subarray(i, i + CHUNK_SIZE);\n        const base85 = encode(projectChunk);\n        result.push(`<script data=\"${base85}\">decodeChunk(${projectChunk.length})</script>\\n`);\n      }\n\n      getProjectDataFunction = `() => {\n        const buffer = projectDecodeBuffer;\n        projectDecodeBuffer = null; // Allow GC\n        return Promise.resolve(new Uint8Array(buffer, 0, ${projectData.length}));\n      }`;\n    } else {\n      let src;\n      if (this.project.type === 'blob' || this.options.target === 'zip-one-asset') {\n        isZip = this.project.type !== 'blob';\n        src = './project.zip';\n        storageProgressStart = PROGRESS_FETCHED_COMPRESSED;\n        storageProgressEnd = PROGRESS_EXTRACTED_COMPRESSED;\n      } else {\n        src = './assets/project.json';\n        storageProgressStart = PROGRESS_FETCHED_PROJECT_JSON;\n        storageProgressEnd = PROGRESS_FETCHED_ASSETS;\n      }\n\n      getProjectDataFunction = `() => new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.onload = () => {\n          resolve(xhr.response);\n        };\n        xhr.onerror = () => {\n          if (location.protocol === 'file:') {\n            reject(new Error('Zip environment must be used from a website, not from a file URL.'));\n          } else {\n            reject(new Error('Request to load project data failed.'));\n          }\n        };\n        xhr.onprogress = (e) => {\n          if (e.lengthComputable) {\n            setProgress(interpolate(${PROGRESS_LOADED_SCRIPTS}, ${storageProgressStart}, e.loaded / e.total));\n          }\n        };\n        xhr.responseType = 'arraybuffer';\n        xhr.open('GET', ${JSON.stringify(src)});\n        xhr.send();\n      })`;\n    }\n\n    result.push(`\n    <script>\n      const getProjectData = (function() {\n        const storage = scaffolding.storage;\n        storage.onprogress = (total, loaded) => {\n          setProgress(interpolate(${storageProgressStart}, ${storageProgressEnd}, loaded / total));\n        };\n        ${isZip ? `\n        let zip;\n        // Allow zip to be GC'd after project loads\n        vm.runtime.on('PROJECT_LOADED', () => (zip = null));\n        const findFileInZip = (path) => zip.file(path) || zip.file(new RegExp(\"^([^/]*/)?\" + path + \"$\"))[0];\n        storage.addHelper({\n          load: (assetType, assetId, dataFormat) => {\n            if (!zip) {\n              throw new Error('Zip is not loaded or has been closed');\n            }\n            const path = assetId + '.' + dataFormat;\n            const file = findFileInZip(path);\n            if (!file) {\n              throw new Error('Asset is not in zip: ' + path)\n            }\n            return file\n              .async('uint8array')\n              .then((data) => storage.createAsset(assetType, dataFormat, data, assetId));\n          }\n        });\n        return () => (${getProjectDataFunction})().then(async (data) => {\n          zip = await Scaffolding.JSZip.loadAsync(data);\n          const file = findFileInZip('project.json');\n          if (!file) {\n            throw new Error('project.json is not in zip');\n          }\n          return file.async('arraybuffer');\n        });` : `\n        storage.addWebStore(\n          [\n            storage.AssetType.ImageVector,\n            storage.AssetType.ImageBitmap,\n            storage.AssetType.Sound,\n            storage.AssetType.Font\n          ].filter(i => i),\n          (asset) => new URL('./assets/' + asset.assetId + '.' + asset.dataFormat, location).href\n        );\n        return ${getProjectDataFunction};`}\n      })();\n    </script>`);\n\n    return result;\n  }\n\n  async generateFavicon () {\n    if (this.options.app.icon === null) {\n      return '';\n    }\n    const data = await Adapter.readAsURL(this.options.app.icon, 'app icon');\n    return `<link rel=\"icon\" href=\"${data}\">`;\n  }\n\n  async generateCursor () {\n    if (this.options.cursor.type !== 'custom') {\n      return this.options.cursor.type;\n    }\n    if (!this.options.cursor.custom) {\n      // Configured to use a custom cursor but no image was selected\n      return 'auto';\n    }\n    const data = await Adapter.readAsURL(this.options.cursor.custom, 'custom cursor');\n    return `url(${data}) ${this.options.cursor.center.x} ${this.options.cursor.center.y}, auto`;\n  }\n\n  async generateExtensionURLs () {\n    const dispatchProgress = (progress) => this.dispatchEvent(new CustomEvent('fetch-extensions', {\n      detail: {\n        progress\n      }\n    }));\n\n    const shouldTryToFetch = (url) => {\n      if (!this.options.bakeExtensions) {\n        return false;\n      }\n      try {\n        const parsed = new URL(url);\n        return parsed.protocol === 'http:' || parsed.protocol === 'https:';\n      } catch (e) {\n        return false;\n      }\n    };\n\n    /** @type {string[]} */\n    const allURLs = this.options.extensions;\n    const unfetchableURLs = allURLs.filter((url) => !shouldTryToFetch(url));\n    const urlsToFetch = allURLs.filter((url) => shouldTryToFetch(url));\n    const finalURLs = [...unfetchableURLs];\n\n    if (urlsToFetch.length !== 0) {\n      for (let i = 0; i < urlsToFetch.length; i++) {\n        dispatchProgress(i / urlsToFetch.length);\n        const url = urlsToFetch[i];\n        try {\n          const source = await Adapter.fetchExtensionScript(url);\n          // Wrap the extension in an IIFE so that extensions written for the sandbox are less\n          // likely to cause issues in an unsandboxed environment due to global pollution or\n          // overriding Scratch.*\n          const wrappedSource = `(function(Scratch) { ${source} })(Scratch);`\n          const dataURI = `data:text/javascript;,${encodeURIComponent(wrappedSource)}`;\n          finalURLs.push(dataURI);\n        } catch (e) {\n          console.warn('Could not bake extension', url, e);\n          finalURLs.push(url);\n        }\n      }\n      dispatchProgress(1);\n    }\n\n    return finalURLs;\n  }\n\n  async package () {\n    if (!Adapter) {\n      throw new Error('Missing adapter');\n    }\n    if (this.used) {\n      throw new Error('Packager was already used');\n    }\n    this.used = true;\n    this.ensureNotAborted();\n    await this.loadResources();\n    this.ensureNotAborted();\n    const html = encodeBigString`<!DOCTYPE html>\n<!-- Created with ${WEBSITE} -->\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\">\n  <!-- We only include this to explicitly loosen the CSP of various packager environments. It does not provide any security. -->\n  <meta http-equiv=\"Content-Security-Policy\" content=\"${this.options.csp}\">\n  <title>${escapeXML(this.options.app.windowTitle)}</title>\n  <style>\n    body {\n      color: ${this.options.appearance.foreground};\n      font-family: sans-serif;\n      overflow: hidden;\n      margin: 0;\n      padding: 0;\n    }\n    :root, body.is-fullscreen {\n      background-color: ${this.options.appearance.background};\n    }\n    [hidden] {\n      display: none !important;\n    }\n    h1 {\n      font-weight: normal;\n    }\n    a {\n      color: inherit;\n      text-decoration: underline;\n      cursor: pointer;\n    }\n\n    #app, #loading, #error, #launch {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n    }\n    .screen {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      text-align: center;\n      cursor: default;\n      user-select: none;\n      -webkit-user-select: none;\n      background-color: ${this.options.appearance.background};\n    }\n    #launch {\n      background-color: rgba(0, 0, 0, 0.7);\n      cursor: pointer;\n    }\n    .green-flag {\n      width: 80px;\n      height: 80px;\n      padding: 16px;\n      border-radius: 100%;\n      background: rgba(255, 255, 255, 0.75);\n      border: 3px solid hsla(0, 100%, 100%, 1);\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      box-sizing: border-box;\n    }\n    #loading {\n      ${this.options.loadingScreen.image && this.options.loadingScreen.imageMode === 'stretch'\n        ? `background-image: url(${await Adapter.readAsURL(this.options.loadingScreen.image, 'stretched loading screen')});\n      background-repeat: no-repeat;\n      background-size: contain;\n      background-position: center;`\n        : ''}\n    }\n    .progress-bar-outer {\n      border: 1px solid currentColor;\n      height: 10px;\n      width: 200px;\n      max-width: 200px;\n    }\n    .progress-bar-inner {\n      height: 100%;\n      width: 0;\n      background-color: currentColor;\n    }\n    .loading-text, noscript {\n      font-weight: normal;\n      font-size: 36px;\n      margin: 0 0 16px;\n    }\n    .loading-image {\n      margin: 0 0 16px;\n    }\n    #error-message, #error-stack {\n      font-family: monospace;\n      max-width: 600px;\n      white-space: pre-wrap;\n      user-select: text;\n      -webkit-user-select: text;\n    }\n    #error-stack {\n      text-align: left;\n      max-height: 200px;\n      overflow: auto;\n    }\n    .control-button {\n      width: 2rem;\n      height: 2rem;\n      padding: 0.375rem;\n      margin-top: 0.5rem;\n      margin-bottom: 0.5rem;\n      user-select: none;\n      -webkit-user-select: none;\n      cursor: pointer;\n      border: 0;\n      border-radius: 4px;\n    }\n    .control-button-highlight:hover {\n      background: ${this.options.appearance.accent}26;\n    }\n    .control-button-highlight.active {\n      background: ${this.options.appearance.accent}59;\n    }\n    .fullscreen-button {\n      background: white;\n    }\n    .standalone-fullscreen-button {\n      position: absolute;\n      top: 0;\n      right: 0;\n      background-color: rgba(0, 0, 0, 0.5);\n      border-radius: 0 0 0 4px;\n      padding: 4px;\n      cursor: pointer;\n    }\n    .sc-canvas {\n      cursor: ${await this.generateCursor()};\n    }\n    .sc-monitor-root[data-opcode^=\"data_\"] .sc-monitor-value-color {\n      background-color: ${this.options.monitors.variableColor};\n    }\n    .sc-monitor-row-value-outer {\n      background-color: ${this.options.monitors.listColor};\n    }\n    .sc-monitor-row-value-editing .sc-monitor-row-value-outer {\n      background-color: ${darken(this.options.monitors.listColor)};\n    }\n    ${this.options.custom.css}\n  </style>\n  <meta name=\"theme-color\" content=\"${this.options.appearance.background}\">\n  ${await this.generateFavicon()}\n</head>\n<body>\n  <div id=\"app\"></div>\n\n  <div id=\"launch\" class=\"screen\" hidden title=\"Click to start\">\n    <div class=\"green-flag\">\n      <svg viewBox=\"0 0 16.63 17.5\" width=\"42\" height=\"44\">\n        <defs><style>.cls-1,.cls-2{fill:#4cbf56;stroke:#45993d;stroke-linecap:round;stroke-linejoin:round;}.cls-2{stroke-width:1.5px;}</style></defs>\n        <path class=\"cls-1\" d=\"M.75,2A6.44,6.44,0,0,1,8.44,2h0a6.44,6.44,0,0,0,7.69,0V12.4a6.44,6.44,0,0,1-7.69,0h0a6.44,6.44,0,0,0-7.69,0\"/>\n        <line class=\"cls-2\" x1=\"0.75\" y1=\"16.75\" x2=\"0.75\" y2=\"0.75\"/>\n      </svg>\n    </div>\n  </div>\n\n  <div id=\"loading\" class=\"screen\">\n    <noscript>Enable JavaScript</noscript>\n    ${this.options.loadingScreen.text ? `<h1 class=\"loading-text\">${escapeXML(this.options.loadingScreen.text)}</h1>` : ''}\n    ${this.options.loadingScreen.image && this.options.loadingScreen.imageMode === 'normal' ? `<div class=\"loading-image\"><img src=\"${await Adapter.readAsURL(this.options.loadingScreen.image, 'loading-screen')}\"></div>` : ''}\n    ${this.options.loadingScreen.progressBar ? '<div class=\"progress-bar-outer\"><div class=\"progress-bar-inner\" id=\"loading-inner\"></div></div>' : ''}\n  </div>\n\n  <div id=\"error\" class=\"screen\" hidden>\n    <h1>Error</h1>\n    <details>\n      <summary id=\"error-message\"></summary>\n      <p id=\"error-stack\"></p>\n    </details>\n  </div>\n\n  ${this.options.target === 'html' ? `<script>${this.script}</script>` : '<script src=\"script.js\"></script>'}\n  <script>${removeUnnecessaryEmptyLines(`\n    const appElement = document.getElementById('app');\n    const launchScreen = document.getElementById('launch');\n    const loadingScreen = document.getElementById('loading');\n    const loadingInner = document.getElementById('loading-inner');\n    const errorScreen = document.getElementById('error');\n    const errorScreenMessage = document.getElementById('error-message');\n    const errorScreenStack = document.getElementById('error-stack');\n\n    const handleError = (error) => {\n      console.error(error);\n      if (!errorScreen.hidden) return;\n      errorScreen.hidden = false;\n      errorScreenMessage.textContent = '' + error;\n      let debug = error && error.stack || 'no stack';\n      debug += '\\\\nUser agent: ' + navigator.userAgent;\n      errorScreenStack.textContent = debug;\n    };\n    const setProgress = (progress) => {\n      if (loadingInner) loadingInner.style.width = progress * 100 + '%';\n    };\n    const interpolate = (a, b, t) => a + t * (b - a);\n\n    try {\n      setProgress(${PROGRESS_LOADED_SCRIPTS});\n\n      const scaffolding = new Scaffolding.Scaffolding();\n      scaffolding.width = ${this.options.stageWidth};\n      scaffolding.height = ${this.options.stageHeight};\n      scaffolding.resizeMode = ${JSON.stringify(this.options.resizeMode)};\n      scaffolding.editableLists = ${this.options.monitors.editableLists};\n      scaffolding.usePackagedRuntime = ${this.options.packagedRuntime};\n      scaffolding.setup();\n      scaffolding.appendTo(appElement);\n\n      const vm = scaffolding.vm;\n      window.scaffolding = scaffolding;\n      window.vm = scaffolding.vm;\n      window.Scratch = {\n        vm,\n        renderer: vm.renderer,\n        audioEngine: vm.runtime.audioEngine,\n        bitmapAdapter: vm.runtime.v2BitmapAdapter,\n        videoProvider: vm.runtime.ioDevices.video.provider\n      };\n\n      scaffolding.setUsername(${JSON.stringify(this.options.username)}.replace(/#/g, () => Math.floor(Math.random() * 10)));\n      scaffolding.setAccentColor(${JSON.stringify(this.options.appearance.accent)});\n\n      try {\n        ${this.options.cloudVariables.mode === 'ws' ?\n          `scaffolding.addCloudProvider(${this.makeWebSocketProvider()})` :\n          this.options.cloudVariables.mode === 'local' ?\n          `scaffolding.addCloudProvider(${this.makeLocalStorageProvider()})` :\n          this.options.cloudVariables.mode === 'custom' ?\n          this.makeCustomProvider() :\n          ''\n        };\n      } catch (error) {\n        console.error(error);\n      }\n\n      ${this.options.controls.greenFlag.enabled ? `\n      const greenFlagButton = document.createElement('img');\n      greenFlagButton.src = 'data:image/svg+xml,' + encodeURIComponent('<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16.63 17.5\"><path d=\"M.75 2a6.44 6.44 0 017.69 0h0a6.44 6.44 0 007.69 0v10.4a6.44 6.44 0 01-7.69 0h0a6.44 6.44 0 00-7.69 0\" fill=\"#4cbf56\" stroke=\"#45993d\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/><path stroke-width=\"1.5\" fill=\"#4cbf56\" stroke=\"#45993d\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M.75 16.75v-16\"/></svg>');\n      greenFlagButton.className = 'control-button control-button-highlight green-flag-button';\n      greenFlagButton.draggable = false;\n      greenFlagButton.addEventListener('click', () => {\n        scaffolding.greenFlag();\n      });\n      scaffolding.addEventListener('PROJECT_RUN_START', () => {\n        greenFlagButton.classList.add('active');\n      });\n      scaffolding.addEventListener('PROJECT_RUN_STOP', () => {\n        greenFlagButton.classList.remove('active');\n      });\n      scaffolding.addControlButton({\n        element: greenFlagButton,\n        where: 'top-left'\n      });` : ''}\n\n      ${this.options.controls.pause.enabled ? `\n      const pauseButton = document.createElement('img');\n      pauseButton.className = 'control-button control-button-highlight pause-button';\n      pauseButton.draggable = false;\n      let isPaused = false;\n      pauseButton.addEventListener('click', () => {\n        vm.setPaused(!isPaused);\n      });\n      const updatePause = (_isPaused) => {\n        isPaused = _isPaused;\n        if (isPaused) {\n          pauseButton.src = 'data:image/svg+xml,' + encodeURIComponent('<svg width=\"16\" height=\"16\" viewBox=\"0 0 4.2333332 4.2333335\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m3.95163484 2.02835365-1.66643921.9621191-1.66643913.96211911V.10411543l1.66643922.9621191z\" fill=\"#ffae00\"/></svg>');\n        } else {\n          pauseButton.src = 'data:image/svg+xml,' + encodeURIComponent('<svg width=\"16\" height=\"16\" viewBox=\"0 0 4.2333332 4.2333335\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"#ffae00\"><path d=\"M.389.19239126h1.2631972v3.8485508H.389zM2.5810001.19239126h1.2631972v3.8485508H2.5810001z\"/></g></svg>');\n        }\n      }\n      vm.on('P4_PAUSE', updatePause);\n      updatePause();\n      scaffolding.addControlButton({\n        element: pauseButton,\n        where: 'top-left'\n      });` : ''}\n\n      ${this.options.controls.stopAll.enabled ? `\n      const stopAllButton = document.createElement('img');\n      stopAllButton.src = 'data:image/svg+xml,' + encodeURIComponent('<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 14 14\"><path fill=\"#ec5959\" stroke=\"#b84848\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M4.3.5h5.4l3.8 3.8v5.4l-3.8 3.8H4.3L.5 9.7V4.3z\"/></svg>');\n      stopAllButton.className = 'control-button control-button-highlight stop-all-button';\n      stopAllButton.draggable = false;\n      stopAllButton.addEventListener('click', () => {\n        scaffolding.stopAll();\n      });\n      scaffolding.addControlButton({\n        element: stopAllButton,\n        where: 'top-left'\n      });` : ''}\n\n      ${this.options.controls.fullscreen.enabled ? `\n      if (document.fullscreenEnabled || document.webkitFullscreenEnabled) {\n        let isFullScreen = !!(document.fullscreenElement || document.webkitFullscreenElement);\n        const fullscreenButton = document.createElement('img');\n        fullscreenButton.draggable = false;\n        fullscreenButton.className = 'control-button fullscreen-button';\n        fullscreenButton.addEventListener('click', () => {\n          if (isFullScreen) {\n            if (document.exitFullscreen) {\n              document.exitFullscreen();\n            } else if (document.webkitExitFullscreen) {\n              document.webkitExitFullscreen();\n            }\n          } else {\n            if (document.body.requestFullscreen) {\n              document.body.requestFullscreen();\n            } else if (document.body.webkitRequestFullscreen) {\n              document.body.webkitRequestFullscreen();\n            }\n          }\n        });\n        const otherControlsExist = ${this.options.controls.greenFlag.enabled || this.options.controls.stopAll.enabled};\n        const fillColor = otherControlsExist ? '#575E75' : '${this.options.appearance.foreground}';\n        const updateFullScreen = () => {\n          isFullScreen = !!(document.fullscreenElement || document.webkitFullscreenElement);\n          document.body.classList.toggle('is-fullscreen', isFullScreen);\n          if (isFullScreen) {\n            fullscreenButton.src = 'data:image/svg+xml,' + encodeURIComponent('<svg width=\"20\" height=\"20\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"' + fillColor + '\" fill-rule=\"evenodd\"><path d=\"M12.662 3.65l.89.891 3.133-2.374a.815.815 0 011.15.165.819.819 0 010 .986L15.467 6.46l.867.871c.25.25.072.664-.269.664L12.388 8A.397.397 0 0112 7.611V3.92c0-.341.418-.514.662-.27M7.338 16.35l-.89-.89-3.133 2.374a.817.817 0 01-1.15-.166.819.819 0 010-.985l2.37-3.143-.87-.871a.387.387 0 01.27-.664L7.612 12a.397.397 0 01.388.389v3.692a.387.387 0 01-.662.27M7.338 3.65l-.89.891-3.133-2.374a.815.815 0 00-1.15.165.819.819 0 000 .986l2.37 3.142-.87.871a.387.387 0 00.27.664L7.612 8A.397.397 0 008 7.611V3.92a.387.387 0 00-.662-.27M12.662 16.35l.89-.89 3.133 2.374a.817.817 0 001.15-.166.819.819 0 000-.985l-2.368-3.143.867-.871a.387.387 0 00-.269-.664L12.388 12a.397.397 0 00-.388.389v3.692c0 .342.418.514.662.27\"/></g></svg>');\n          } else {\n            fullscreenButton.src = 'data:image/svg+xml,' + encodeURIComponent('<svg width=\"20\" height=\"20\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"' + fillColor + '\" fill-rule=\"evenodd\"><path d=\"M16.338 7.35l-.89-.891-3.133 2.374a.815.815 0 01-1.15-.165.819.819 0 010-.986l2.368-3.142-.867-.871a.387.387 0 01.269-.664L16.612 3a.397.397 0 01.388.389V7.08a.387.387 0 01-.662.27M3.662 12.65l.89.89 3.133-2.374a.817.817 0 011.15.166.819.819 0 010 .985l-2.37 3.143.87.871c.248.25.071.664-.27.664L3.388 17A.397.397 0 013 16.611V12.92c0-.342.418-.514.662-.27M3.662 7.35l.89-.891 3.133 2.374a.815.815 0 001.15-.165.819.819 0 000-.986L6.465 4.54l.87-.871a.387.387 0 00-.27-.664L3.388 3A.397.397 0 003 3.389V7.08c0 .341.418.514.662.27M16.338 12.65l-.89.89-3.133-2.374a.817.817 0 00-1.15.166.819.819 0 000 .985l2.368 3.143-.867.871a.387.387 0 00.269.664l3.677.005a.397.397 0 00.388-.389V12.92a.387.387 0 00-.662-.27\"/></g></svg>');\n          }\n        };\n        updateFullScreen();\n        document.addEventListener('fullscreenchange', updateFullScreen);\n        document.addEventListener('webkitfullscreenchange', updateFullScreen);\n        if (otherControlsExist) {\n          fullscreenButton.className = 'control-button fullscreen-button';\n          scaffolding.addControlButton({\n            element: fullscreenButton,\n            where: 'top-right'\n          });\n        } else {\n          fullscreenButton.className = 'standalone-fullscreen-button';\n          document.body.appendChild(fullscreenButton);\n        }\n      }` : ''}\n\n      vm.setTurboMode(${this.options.turbo});\n      if (vm.setInterpolation) vm.setInterpolation(${this.options.interpolation});\n      if (vm.setFramerate) vm.setFramerate(${this.options.framerate});\n      if (vm.renderer.setUseHighQualityRender) vm.renderer.setUseHighQualityRender(${this.options.highQualityPen});\n      if (vm.setRuntimeOptions) vm.setRuntimeOptions({\n        fencing: ${this.options.fencing},\n        miscLimits: ${this.options.miscLimits},\n        maxClones: ${this.options.maxClones},\n      });\n      if (vm.setCompilerOptions) vm.setCompilerOptions({\n        enabled: ${this.options.compiler.enabled},\n        warpTimer: ${this.options.compiler.warpTimer}\n      });\n      if (vm.renderer.setMaxTextureDimension) vm.renderer.setMaxTextureDimension(${this.options.maxTextureDimension});\n\n      if (typeof ScaffoldingAddons !== 'undefined') {\n        ScaffoldingAddons.run(scaffolding, ${JSON.stringify(this.getAddonOptions())});\n      }\n\n      scaffolding.setExtensionSecurityManager({\n        getSandboxMode: () => 'unsandboxed',\n        canLoadExtensionFromProject: () => true\n      });\n      for (const extension of ${JSON.stringify(await this.generateExtensionURLs())}) {\n        vm.extensionManager.loadExtensionURL(extension);\n      }\n\n      ${this.options.closeWhenStopped ? `\n      vm.runtime.on('PROJECT_RUN_STOP', () => {\n        if (!vm.isPaused || !vm.isPaused()) {\n          window.close();\n        }\n      });` : ''}\n\n      ${this.options.target.startsWith('nwjs-') ? `\n      if (typeof nw !== 'undefined') {\n        const win = nw.Window.get();\n        win.on('new-win-policy', (frame, url, policy) => {\n          policy.ignore();\n          nw.Shell.openExternal(url);\n        });\n        win.on('navigation', (frame, url, policy) => {\n          policy.ignore();\n          nw.Shell.openExternal(url);\n        });\n        document.addEventListener('keydown', (e) => {\n          if (e.key === 'Escape' && document.fullscreenElement) {\n            document.exitFullscreen();\n          }\n        });\n      }` : ''}\n    } catch (e) {\n      handleError(e);\n    }\n  `)}</script>\n  ${this.options.custom.js ? `<script>\n    try {\n      ${this.options.custom.js}\n    } catch (e) {\n      handleError(e);\n    }\n  </script>` : ''}\n  ${await this.generateGetProjectData()}\n  <script>\n    const run = async () => {\n      const projectData = await getProjectData();\n      await scaffolding.loadProject(projectData);\n      setProgress(1);\n      loadingScreen.hidden = true;\n      if (${this.options.autoplay}) {\n        scaffolding.start();\n      } else {\n        launchScreen.hidden = false;\n        launchScreen.addEventListener('click', () => {\n          launchScreen.hidden = true;\n          scaffolding.start();\n        });\n        launchScreen.focus();\n      }\n    };\n    run().catch(handleError);\n  </script>\n</body>\n</html>\n`;\n    this.ensureNotAborted();\n\n    if (this.options.target !== 'html') {\n      let zip;\n      if (this.project.type === 'sb3' && this.options.target !== 'zip-one-asset') {\n        zip = await (await getJSZip()).loadAsync(this.project.arrayBuffer);\n        for (const file of Object.keys(zip.files)) {\n          zip.files[`assets/${file}`] = zip.files[file];\n          delete zip.files[file];\n        }\n      } else {\n        zip = new (await getJSZip());\n        zip.file('project.zip', this.project.arrayBuffer);\n      }\n      zip.file('index.html', html);\n      zip.file('script.js', this.script);\n\n      if (this.options.target.startsWith('nwjs-')) {\n        zip = await this.addNwJS(zip);\n      } else if (this.options.target.startsWith('electron-')) {\n        zip = await this.addElectron(zip);\n      } else if (this.options.target === 'webview-mac') {\n        zip = await this.addWebViewMac(zip);\n      }\n\n      this.ensureNotAborted();\n      return {\n        data: await zip.generateAsync({\n          type: 'uint8array',\n          compression: 'DEFLATE',\n          // Use UNIX permissions so that executable bits are properly set for macOS and Linux\n          platform: 'UNIX'\n        }, (meta) => {\n          this.dispatchEvent(new CustomEvent('zip-progress', {\n            detail: {\n              progress: meta.percent / 100\n            }\n          }));\n        }),\n        type: 'application/zip',\n        filename: this.generateFilename('zip')\n      };\n    }\n    return {\n      data: html,\n      type: 'text/html',\n      filename: this.generateFilename('html')\n    };\n  }\n}\n\nPackager.getDefaultPackageNameFromFileName = (title) => {\n  // Note: Changing this logic is very dangerous because changing the defaults will cause already packaged projects\n  // to loose any data when they are updated.\n  title = title.split('.')[0];\n  title = title.replace(/[^\\-a-z ]/gi, '');\n  title = title.trim();\n  title = title.replace(/ /g, '-');\n  return title.toLowerCase() || 'packaged-project';\n};\n\nPackager.getWindowTitleFromFileName = (title) => {\n  const split = title.split('.');\n  if (split.length > 1) {\n    split.pop();\n  }\n  title = split.join('.').trim();\n  return title || 'Packaged Project';\n};\n\nPackager.usesUnsafeOptions = (options) => {\n  const defaultOptions = Packager.DEFAULT_OPTIONS();\n  const getUnsafeOptions = (options) => [\n    options.custom,\n    options.extensions,\n    options.cloudVariables.unsafeCloudBehaviors\n  ];\n  return JSON.stringify(getUnsafeOptions(defaultOptions)) !== JSON.stringify(getUnsafeOptions(options));\n};\n\nPackager.DEFAULT_OPTIONS = () => ({\n  turbo: false,\n  interpolation: false,\n  framerate: 30,\n  highQualityPen: false,\n  maxClones: 300,\n  fencing: true,\n  miscLimits: true,\n  stageWidth: 480,\n  stageHeight: 360,\n  resizeMode: 'preserve-ratio',\n  autoplay: false,\n  username: 'player####',\n  closeWhenStopped: false,\n  projectId: '',\n  custom: {\n    css: '',\n    js: ''\n  },\n  appearance: {\n    background: '#000000',\n    foreground: '#ffffff',\n    accent: ACCENT_COLOR\n  },\n  loadingScreen: {\n    progressBar: true,\n    text: '',\n    imageMode: 'normal',\n    image: null\n  },\n  controls: {\n    greenFlag: {\n      enabled: false,\n    },\n    stopAll: {\n      enabled: false,\n    },\n    fullscreen: {\n      enabled: false\n    },\n    pause: {\n      enabled: false\n    }\n  },\n  monitors: {\n    editableLists: false,\n    variableColor: '#ff8c1a',\n    listColor: '#fc662c'\n  },\n  compiler: {\n    enabled: true,\n    warpTimer: false\n  },\n  packagedRuntime: true,\n  target: 'html',\n  csp: \"default-src * 'self' 'unsafe-inline' 'unsafe-eval' data: blob:\",\n  app: {\n    icon: null,\n    packageName: Packager.getDefaultPackageNameFromFileName(''),\n    windowTitle: Packager.getWindowTitleFromFileName(''),\n    windowMode: 'window',\n    version: '1.0.0',\n    escapeBehavior: 'unfullscreen-only',\n    windowControls: 'default'\n  },\n  chunks: {\n    gamepad: false,\n    pointerlock: false,\n  },\n  cloudVariables: {\n    mode: 'ws',\n    cloudHost: 'wss://clouddata.turbowarp.org',\n    custom: {},\n    specialCloudBehaviors: false,\n    unsafeCloudBehaviors: false,\n  },\n  cursor: {\n    type: 'auto',\n    custom: null,\n    center: {\n      x: 0,\n      y: 0\n    }\n  },\n  steamworks: {\n    // 480 is Spacewar, the Steamworks demo game\n    appId: '480',\n    // 'ignore' (no alert), 'warning' (alert and continue), or 'error' (alert and exit)\n    onError: 'warning'\n  },\n  extensions: [],\n  bakeExtensions: true,\n  maxTextureDimension: 2048\n});\n\nexport default Packager;\n","const downloadURL = (filename, url) => {\n  const link = document.createElement('a');\n  link.download = filename;\n  link.href = url;\n  document.body.appendChild(link);\n  link.click();\n  link.remove();\n};\n\nexport default downloadURL;\n","<script>\n  import Section from './Section.svelte';\n  import {_} from '../locales';\n  import {getJSZip} from '../packager/packager';\n  import downloadURL from './download-url';\n  import {isChromeOS} from './environment';\n\n  export let name;\n  export let url;\n  export let blob;\n\n  let workaroundInProgress;\n\n  const useAlternativeDownloadToBypassChromeOSBugs = async () => {\n    // We've had a lot of bug reports about people on Chrome OS devices not being able to download\n    // HTML files but being able to download zip files just fine. We're pretty sure that's not our\n    // fault so we have to work around it (I want to blame whatever surveillance extensions\n    // they're being forced to install).\n\n    workaroundInProgress = true;\n\n    try {\n      const JSZip = await getJSZip();\n      const zip = new JSZip();\n      zip.file(name, blob);\n      const zippedBlob = await zip.generateAsync({\n        type: 'blob',\n        compression: 'DEFLATE'\n      });\n      const newFileName = name.replace(/\\.html$/, '.zip');\n  \n      const blobURL = URL.createObjectURL(zippedBlob);\n      downloadURL(newFileName, blobURL);\n      URL.revokeObjectURL(blobURL);\n    } catch (e) {\n      console.error(e);\n    }\n\n    workaroundInProgress = false;\n  };\n</script>\n\n<style>\n  .alternative {\n    font-size: smaller;\n  }\n</style>\n\n<Section center>\n  <div>\n    <p>\n      <a href={url} download={name}>\n        {$_('downloads.link')\n          .replace('{size}', `${(blob.size / 1000 / 1000).toFixed(2)}MB`)\n          .replace('{filename}', name)}\n      </a>\n    </p>\n    {#if isChromeOS && name.endsWith('.html')}\n      <p class=\"alternative\">\n        <button\n          on:click={useAlternativeDownloadToBypassChromeOSBugs}\n          disabled={workaroundInProgress}\n        >\n          {$_('downloads.useWorkaround')}\n        </button>\n      </p>\n    {/if}\n  </div>\n</Section>\n","// https://github.com/jakearchibald/safari-14-idb-fix/blob/582bbdc7230891113bfb5743391550cbf29d21f2/src/index.ts\nconst idbReady = () => {\n  const isSafari =\n    !navigator.userAgentData &&\n    /Safari\\//.test(navigator.userAgent) &&\n    !/Chrom(e|ium)\\//.test(navigator.userAgent);\n\n  // No point putting other browsers or older versions of Safari through this mess.\n  if (!isSafari || !indexedDB.databases) return Promise.resolve();\n\n  let intervalId;\n  return new Promise((resolve) => {\n    const tryIdb = () => indexedDB.databases().finally(resolve);\n    intervalId = setInterval(tryIdb, 100);\n    tryIdb();\n  }).finally(() => clearInterval(intervalId));\n};\n\nconst allDatabases = [];\n\nclass Database {\n  constructor (name, version, storeName) {\n    this.name = name;\n    this.version = version;\n    this.storeName = storeName;\n    this.db = null;\n    this.dbPromise = null;\n    allDatabases.push(this);\n  }\n\n  open () {\n    if (this.db) {\n      return this.db;\n    }\n    if (this.dbPromise) {\n      return this.dbPromise;\n    }\n    if (typeof indexedDB === 'undefined') {\n      throw new Error('indexedDB is not supported');\n    }\n\n    this.dbPromise = idbReady()\n      .then(() => new Promise((resolve, reject) => {\n        const request = indexedDB.open(this.name, this.version);\n        request.onupgradeneeded = (e) => {\n          const db = e.target.result;\n          db.createObjectStore(this.storeName, {\n            keyPath: 'id'\n          });\n        };\n        request.onsuccess = (e) => {\n          const db = e.target.result;\n          resolve(db);\n        };\n        request.onerror = (e) => {\n          reject(new Error(`IDB Error ${e.target.error}`));\n        };\n      }))\n      .then((db) => {\n        this.dbPromise = null;\n        this.db = db;\n        return db;\n      })\n      .catch((err) => {\n        this.dbPromise = null;\n        throw err;\n      });\n\n    return this.dbPromise;\n  }\n\n  close () {\n    if (this.db) {\n      this.db.close();\n      this.db = null;\n    }\n    if (this.dbPromise) {\n      this.dbPromise.then((db) => {\n        db.close();\n      });\n      this.dbPromise = null;\n    }\n  }\n\n  async createTransaction (readwrite) {\n    const db = await this.open();\n    const transaction = db.transaction(this.storeName, readwrite);\n    const store = transaction.objectStore(this.storeName);\n    return {\n      db,\n      transaction,\n      store\n    };\n  }\n\n  async deleteEverything () {\n    const {transaction, store} = await this.createTransaction('readwrite');\n    return new Promise((resolve, reject) => {\n      Database.setTransactionErrorHandler(transaction, reject);\n      const request = store.clear();\n      request.onsuccess = () => {\n        resolve();\n      };\n    });\n  }\n}\n\n/**\n * @param {IDBTransaction} transaction\n * @param {function} reject\n */\nDatabase.setTransactionErrorHandler = (transaction, reject) => {\n  transaction.onerror = () => {\n    reject(new Error(`Transaction error: ${transaction.error}`))\n  };\n  transaction.onabort = () => {\n    reject(new Error(`Transaction aborted: ${transaction.error}`));\n  };\n};\n\nconst closeAllDatabases = () => {\n  for (const database of allDatabases) {\n    database.close();\n  }\n};\n// Closing databases makes us more likely to be put in the browser's back/forward cache\nwindow.addEventListener('pagehide', closeAllDatabases);\n\nexport default Database;\n","import {writable} from 'svelte/store';\nimport Database from '../common/idb';\nimport {readAsArrayBuffer} from '../common/readers';\n\nconst DATABASE_NAME = 'p4-local-settings';\nconst DATABASE_VERSION = 1;\nconst STORE_NAME = 'blobs';\n\nconst db = new Database(DATABASE_NAME, DATABASE_VERSION, STORE_NAME);\n\nconst makeNamedBlob = (buffer, type, name) => {\n  const blob = new Blob([buffer], {type});\n  blob.name = name;\n  return blob;\n};\n\nconst cloneBlob = async (blob) => {\n  const buffer = await readAsArrayBuffer(blob);\n  return makeNamedBlob(buffer, blob.type, blob.name);\n};\n\nconst get = async (key) => {\n  const {transaction, store} = await db.createTransaction('readonly');\n  return new Promise((resolve, reject) => {\n    Database.setTransactionErrorHandler(transaction, reject);\n    const request = store.get(key);\n    request.onsuccess = (e) => {\n      const result = e.target.result;\n      if (result) {\n        const data = result.data;\n        // Older versions stored these files as instances of File\n        if (data instanceof Blob) {\n          // Clone immediately to fix spurious \"NotFoundError: Node was not found\" in Firefox\n          resolve(cloneBlob(data));\n        } else {\n          resolve(makeNamedBlob(data, result.type, result.name));\n        }\n      } else {\n        resolve(null);\n      }\n    };\n  });\n};\n\nconst set = async (key, file) => {\n  const arrayBuffer = file ? await readAsArrayBuffer(file) : null;\n  const {transaction, store} = await db.createTransaction('readwrite');\n  return new Promise((resolve, reject) => {\n    Database.setTransactionErrorHandler(transaction, reject);\n    const request = file ? store.put({\n      id: key,\n      data: arrayBuffer,\n      type: file.type,\n      name: file.name\n    }) : store.delete(key);\n    request.onsuccess = () => {\n      resolve();\n    };\n  });\n};\n\nconst resetAll = () => db.deleteEverything();\n\nconst writableFileStore = (key) => {\n  let hasQueried = false;\n  const store = writable(null, () => {\n    const unsubscribe = store.subscribe((file) => {\n      if (hasQueried) {\n        set(key, file)\n          .catch((err) => {\n            console.warn(err);\n          });\n      }\n    });\n    return unsubscribe;\n  });\n  get(key)\n    .then((value) => {\n      hasQueried = true;\n      if (value) {\n        store.set(value);\n      }\n    });\n  return store;\n};\n\nexport default {\n  writableFileStore,\n  resetAll\n};\n","import {isSafari, isStandalone} from './environment';\nimport escapeXML from '../common/escape-xml';\nimport {_} from '../locales';\n\nconst origin = isStandalone ? '*' : location.origin;\n\nconst getPreviewSource = () => `<!DOCTYPE html>\n<html>\n<head>\n  <title>${escapeXML(_.translate('preview.loading'))}</title>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\">\n  <style>\n  body {\n    background: black;\n    color: white;\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  }\n  .preview-message {\n    background: inherit;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    justify-content: center;\n    text-align: center;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    user-select: none;\n    -webkit-user-select: none;\n  }\n  .preview-progress-outer {\n    width: 200px;\n    height: 10px;\n    border: 1px solid white;\n  }\n  .preview-progress-inner {\n    height: 100%;\n    width: 0;\n    background: white;\n  }\n  [hidden] {\n    display: none;\n  }\n  </style>\n</head>\n<body>\n  <div class=\"preview-message\">\n    <noscript>Enable JavaScript</noscript>\n    <div class=\"preview-progress-outer\"><div class=\"preview-progress-inner\"></div></div>\n  </div>\n  <div class=\"preview-message preview-error\" hidden>\n    <div class=\"preview-error-message\"></div>\n    <div>Go back to the original tab and try again</div>\n  </div>\n  <script>\n  (function() {\n    const origin = ${JSON.stringify(origin)};\n    const err = (message) => {\n      document.querySelector(\".preview-error\").hidden = false;\n      document.querySelector(\".preview-error-message\").textContent = \"Error: \" + message;\n    };\n    if (!window.opener) {\n      err(\"Can't communicate with main page.\");\n      return;\n    }\n    let hasRun = false;\n    const progressBar = document.querySelector(\".preview-progress-inner\");\n    const progressText = document.querySelector(\".preview-progress-text\");\n    window.addEventListener(\"message\", (e) => {\n      if (origin !== \"*\" && e.origin !== location.origin) return;\n      if (hasRun) return;\n      if (e.data.blob) {\n        hasRun = true;\n        const fr = new FileReader();\n        fr.onload = () => {\n          document.open();\n          document.write(fr.result);\n          document.close(); // fixes poor performance in firefox\n        };\n        fr.onerror = () => {\n          err(\"Something went wrong reading the file: \" + fr.error);\n        };\n        fr.readAsText(e.data.blob);\n      }\n      if (typeof e.data.progress === \"number\") {\n        progressBar.style.width = (e.data.progress * 100) + \"%\";\n      }\n    });\n    window.opener.postMessage({\n      preview: \"hello\"\n    }, origin);\n  })();\n  </script>\n</body>\n</html>\n`;\nconst windowToBlobMap = new WeakMap();\n\nclass Preview {\n  constructor () {\n    const preview = getPreviewSource();\n\n    // Safari does not let file: URIs used by standalone version to open blob: URIs\n    // The desktop app just doesn't support windows loaded from blobs\n    const canUseBlobWindow = !(isStandalone && isSafari) && typeof IsDesktop === 'undefined';\n    if (canUseBlobWindow) {\n      const url = URL.createObjectURL(new Blob([preview], {\n        type: 'text/html'\n      })) + '#do-not-share-this-link-it-will-not-work-for-others';\n      this.window = window.open(url);\n    } else {\n      this.window = window.open('about:blank');\n      if (this.window) {\n        this.window.document.write(preview);\n      }\n    }\n    if (!this.window) {\n      throw new Error('Cannot open popup');\n    }\n  }\n\n  setContent (content) {\n    windowToBlobMap.set(this.window, content);\n    this.window.postMessage({\n      blob: content\n    }, origin);\n  }\n\n  setProgress (progress, text) {\n    this.window.postMessage({\n      progress,\n      text\n    }, origin);\n  }\n\n  close () {\n    this.window.close();\n  }\n}\n\nwindow.addEventListener('message', (e) => {\n  if (origin !== '*' && e.origin !== location.origin) {\n    return;\n  }\n  const data = e.data;\n  if (data && data.preview === 'hello') {\n    const source = e.source;\n    const blob = windowToBlobMap.get(source);\n    if (blob) {\n      source.postMessage({\n        blob\n      }, origin);\n    }\n  }\n});\n\nexport default Preview;\n","const deepClone = (obj) => {\n  if (obj instanceof Blob) {\n    return obj;\n  }\n  if (Array.isArray(obj)) {\n    const result = [];\n    for (const value of obj) {\n      result.push(deepClone(value));\n    }\n    return result;\n  }\n  if (obj && typeof obj === 'object') {\n    // TODO: there's probably some prototype pollution in here\n    const result = {};\n    for (const key of Object.keys(obj)) {\n      result[key] = deepClone(obj[key]);\n    }\n    return result;\n  }\n  // Primitive type\n  return obj;\n};\n\nexport default deepClone;\n","import largeAssets from '../large-assets';\nimport {buildId} from '../build-id';\nimport Database from '../../common/idb';\n\nconst DATABASE_NAME = 'p4-large-assets';\nconst DATABASE_VERSION = 1;\nconst STORE_NAME = 'assets';\n\nconst db = new Database(DATABASE_NAME, DATABASE_VERSION, STORE_NAME);\n\nconst getAssetId = (asset) => {\n  if (asset.sha256) {\n    return asset.sha256;\n  }\n  return `${buildId}-${JSON.stringify(asset.src)}`;\n};\n\nconst removeExtraneous = async () => {\n  const {transaction, store} = await db.createTransaction('readwrite');\n  return new Promise((resolve, reject) => {\n    Database.setTransactionErrorHandler(transaction, reject);\n    const keyRequest = store.getAllKeys();\n    keyRequest.onsuccess = async e => {\n      const keys = e.target.result;\n      const allValidAssetIds = Object.values(largeAssets).map(getAssetId);\n      const keysToDelete = keys.filter(i => !allValidAssetIds.includes(i));\n\n      for (const key of keysToDelete) {\n        await new Promise(resolveDelete => {\n          const deleteRequest = store.delete(key);\n          deleteRequest.onsuccess = () => {\n            resolveDelete();\n          };\n        });\n      }\n\n      resolve();\n    };\n  });\n};\n\nconst get = async (asset) => {\n  const {transaction, store} = await db.createTransaction('readonly');\n  return new Promise((resolve, reject) => {\n    Database.setTransactionErrorHandler(transaction, reject);\n    const assetId = getAssetId(asset);\n    const request = store.get(assetId);\n    request.onsuccess = (e) => {\n      const result = e.target.result;\n      if (result) {\n        resolve(result.data);\n      } else {\n        resolve(null);\n      }\n    };\n  });\n};\n\nconst set = async (asset, content) => {\n  const {transaction, store} = await db.createTransaction('readwrite');\n  return new Promise((resolve, reject) => {\n    Database.setTransactionErrorHandler(transaction, reject);\n    const assetId = getAssetId(asset);\n    const request = store.put({\n      id: assetId,\n      data: content\n    });\n    request.onsuccess = () => {\n      resolve();\n    };\n  });\n};\n\nconst resetAll = () => db.deleteEverything();\n\nremoveExtraneous();\n\nexport default {\n  get,\n  set,\n  resetAll\n};\n","export default __webpack_public_path__ + \"assets/default-icon.290e09e569a1cab8e61ba93b0d23863f.png\";","import {setAdapter} from '../adapter';\nimport Packager from '../packager';\nimport WebAdapter from './adapter';\n\nsetAdapter(new WebAdapter());\n\nexport default Packager;\n","import assetCache from './cache';\nimport request from '../../common/request';\nimport {readAsURL, readAsArrayBuffer} from '../../common/readers';\nimport defaultIcon from '../images/default-icon.png';\n\nclass WebAdapter {\n  getCachedAsset (asset) {\n    return assetCache.get(asset)\n  }\n\n  async cacheAsset (asset, result) {\n    await assetCache.set(asset, result);\n  }\n\n  getAppIcon (file) {\n    if (!file) {\n      return request({\n        url: defaultIcon,\n        type: 'arraybuffer'\n      });\n    }\n    // Convert to PNG\n    if (file.type === 'image/png') {\n      return readAsArrayBuffer(file);\n    }\n    return new Promise((resolve, reject) => {\n      const url = URL.createObjectURL(file);\n      const image = new Image();\n      image.onload = () => {\n        image.onload = null;\n        image.onerror = null;\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        if (!ctx) {\n          reject(new Error('Cannot get rendering context for icon conversion'));\n          return;\n        }\n        canvas.width = image.width;\n        canvas.height = image.height;\n        ctx.drawImage(image, 0, 0);\n        canvas.toBlob((blob) => {\n          URL.revokeObjectURL(url);\n          resolve(readAsArrayBuffer(blob));\n        });\n      };\n      image.onerror = () => {\n        image.onload = null;\n        image.onerror = null;\n        reject(new Error('Cannot load icon'));\n      };\n      image.src = url;\n    });\n  }\n\n  readAsURL (file, debugInfo) {\n    return readAsURL(file)\n      .catch((err) => {\n        throw new Error(`${debugInfo}: ${err}`);\n      });\n  }\n\n  fetchExtensionScript (url) {\n    return request({\n      type: 'text',\n      url: url\n    });\n  }\n}\n\nexport default WebAdapter;\n","/**\n * @param {ArrayBuffer} arrayBuffer\n * @returns {string}\n */\nexport const encode = (arrayBuffer) => {\n  let string = '';\n  const data = new Uint8Array(arrayBuffer);\n  for (let i = 0; i < data.byteLength; i++) {\n    string += String.fromCharCode(data[i]);\n  }\n  return btoa(string);\n};\n\n/**\n * @param {string} string\n * @returns {ArrayBuffer}\n */\nexport const decode = (string) => {\n  const data = atob(string);\n  const result = new Uint8Array(data.length);\n  for (let i = 0; i < data.length; i++) {\n    result[i] = data.charCodeAt(i);\n  }\n  return result.buffer;\n};\n","import {readAsArrayBuffer} from '../common/readers';\nimport {encode, decode} from './base64';\n\nconst BLOB_IDENTIFIER = '__isBlob';\n\nconst isObjectOrArray = (value) => value !== null && typeof value === 'object';\n\n/**\n * Generate an object where any child properties of type Blob will have their data inlined.\n * @param {unknown} object \n * @returns {Promise<unknown>}\n */\nconst recursivelySerializeBlobs = async (object) => {\n  if (Array.isArray(object)) {\n    return object;\n  }\n  const result = {};\n  for (const key of Object.keys(object)) {\n    if (key === BLOB_IDENTIFIER) {\n      // We could add special handling for this property, but nothing we export should actually\n      // use this property anyways so this is fine for now.\n      throw new Error(`Can't serialize special key: ${BLOB_IDENTIFIER}`);\n    }\n\n    const value = object[key];\n    if (value instanceof Blob) {\n      const arrayBuffer = await readAsArrayBuffer(value);\n      result[key] = {\n        [BLOB_IDENTIFIER]: true,\n        type: value.type,\n        name: value.name || '',\n        data: encode(arrayBuffer)\n      };\n    } else if (isObjectOrArray(value)) {\n      result[key] = await recursivelySerializeBlobs(value);\n    } else {\n      result[key] = value;\n    }\n  }\n  return result;\n};\n\n/**\n * Generate an object where any child properties inlined by recursivelySerializeBlobs will be converted\n * back to a blob.\n * @param {unknown} object\n * @returns {unknown}\n */\nconst recursivelyDeserializeBlobs = (object) => {\n  if (Array.isArray(object)) {\n    return object;\n  }\n  const result = {};\n  for (const key of Object.keys(object)) {\n    const value = object[key];\n    if (isObjectOrArray(value)) {\n      if (value[BLOB_IDENTIFIER]) {\n        const blob = new Blob([decode(value.data)], {\n          type: value.type\n        });\n        blob.name = value.name;\n        result[key] = blob;\n      } else {\n        result[key] = recursivelyDeserializeBlobs(value);\n      }\n    } else {\n      result[key] = value;\n    }\n  }\n  return result;\n};\n\nexport {\n  recursivelySerializeBlobs,\n  recursivelyDeserializeBlobs\n};\n","<script>\n  import {onDestroy} from 'svelte';\n  import {_} from '../locales/';\n  import {slide, fade} from 'svelte/transition';\n  import Section from './Section.svelte';\n  import Button from '../p4/Button.svelte';\n  import ImageInput from './ImageInput.svelte';\n  import CustomExtensions from '../p4/CustomExtensions.svelte';\n  import LearnMore from './LearnMore.svelte';\n  import ColorPicker from './ColorPicker.svelte';\n  import Downloads from './Downloads.svelte';\n  import writablePersistentStore from './persistent-store';\n  import fileStore from './file-store';\n  import {progress, currentTask, error} from './stores';\n  import Preview from './preview';\n  import deepClone from './deep-clone';\n  import Packager from '../packager/web/export';\n  import Task from './task';\n  import downloadURL from './download-url';\n  import {recursivelySerializeBlobs, recursivelyDeserializeBlobs} from './blob-serializer';\n  import {readAsText} from '../common/readers';\n  import merge from './merge';\n  import DropArea from './DropArea.svelte';\n  import {APP_NAME} from '../packager/brand';\n\n  export let projectData;\n  export let title;\n\n  // JSON can't easily parse Infinity, so we'll just store large numbers instead\n  const ALMOST_INFINITY = 9999999999;\n\n  const cloudVariables = projectData.project.analysis.stageVariables\n    .filter(i => i.isCloud)\n    .map(i => i.name);\n\n  const defaultOptions = Packager.DEFAULT_OPTIONS();\n  defaultOptions.projectId = projectData.projectId || `p4-${projectData.uniqueId}`;\n  defaultOptions.custom.csp = defaultOptions.custom.csp || \"default-src * 'self' 'unsafe-inline' 'unsafe-eval' data: blob:\";\n  for (const variable of cloudVariables) {\n    defaultOptions.cloudVariables.custom[variable] = 'ws';\n  }\n  defaultOptions.app.packageName = Packager.getDefaultPackageNameFromFileName(projectData.title);\n  defaultOptions.app.windowTitle = Packager.getWindowTitleFromFileName(projectData.title);\n  defaultOptions.extensions = projectData.project.analysis.extensions;\n  const options = writablePersistentStore(`PackagerOptions.${projectData.uniqueId}`, defaultOptions);\n\n  // Compatibility with https://github.com/TurboWarp/packager/commit/f66199abd1c896c11aa69247275a1594fdfc95b8\n  $options.extensions = $options.extensions.map(i => {\n    if (typeof i === 'object' && i) return i.url || '';\n    return i;\n  });\n\n  const hasMagicComment = (magic) => projectData.project.analysis.stageComments.find(\n    (text) => text.split('\\n').find((line) => line.endsWith(magic))\n  );\n  const hasSettingsStoredInProject = hasMagicComment(' // _twconfig_');\n\n  let result = null;\n  let previewer = null;\n  const resetResult = () => {\n    previewer = null;\n    if (result) {\n      URL.revokeObjectURL(result.url);\n    }\n    result = null;\n  }\n  $: if (previewer) {\n    previewer.setProgress($progress.progress, $progress.text);\n  }\n  $: $options, resetResult(), currentTask.abort();\n\n  const icon = fileStore.writableFileStore(`PackagerOptions.icon.${projectData.uniqueId}`);\n  $: $options.app.icon = $icon;\n\n  const customCursorIcon = fileStore.writableFileStore(`PackagerOptions.customCursorIcon.${projectData.uniqueId}`);\n  $: $options.cursor.custom = $customCursorIcon;\n\n  const loadingScreenImage = fileStore.writableFileStore(`PackagerOptions.loadingScreenImage.${projectData.uniqueId}`);\n  $: $options.loadingScreen.image = $loadingScreenImage;\n\n  $: title = $options.app.windowTitle;\n\n  const setOptions = (newOptions) => {\n    $options = newOptions;\n    $icon = $options.app.icon;\n    $customCursorIcon = $options.cursor.custom;\n    $loadingScreenImage = $options.loadingScreen.image;\n  };\n\n  const otherEnvironmentsInitiallyOpen = ![\n    'html',\n    'zip',\n    'electron-win32',\n    'webview-mac',\n    'electron-linux64'\n  ].includes($options.target);\n\n  const advancedOptionsInitiallyOpen = (\n    $options.compiler.enabled !== defaultOptions.compiler.enabled ||\n    $options.compiler.warpTimer !== defaultOptions.compiler.warpTimer ||\n    $options.extensions.length !== 0 ||\n    $options.bakeExtensions !== defaultOptions.bakeExtensions ||\n    $options.custom.css !== '' ||\n    $options.custom.js !== '' ||\n    $options.projectId !== defaultOptions.projectId ||\n    $options.packagedRuntime !== defaultOptions.packagedRuntime ||\n    $options.maxTextureDimension !== defaultOptions.maxTextureDimension\n  );\n\n  const automaticallyCenterCursor = () => {\n    const icon = $customCursorIcon;\n    const url = URL.createObjectURL(icon)\n    const image = new Image();\n    const cleanup = () => {\n      image.onerror = null;\n      image.onload = null;\n      URL.revokeObjectURL(url);\n    };\n    image.onload = () => {\n      $options.cursor.center.x = Math.round(image.width / 2);\n      $options.cursor.center.y = Math.round(image.height / 2);\n      cleanup();\n    };\n    image.onerror = () => {\n      cleanup();\n      $error = new Error('Image could not be loaded');\n      throw $error;\n    };\n    image.src = url;\n  };\n\n  const runPackager = async (task, options) => {\n    const packager = new Packager();\n    packager.options = options;\n    packager.project = projectData.project;\n\n    task.addEventListener('abort', () => {\n      packager.abort();\n    });\n\n    task.setProgressText($_('progress.loadingScripts'));\n\n    packager.addEventListener('fetch-extensions', ({detail}) => {\n      task.setProgressText($_('progress.downloadingExtensions'));\n      task.setProgress(detail.progress);\n    });\n    packager.addEventListener('large-asset-fetch', ({detail}) => {\n      let thing;\n      if (detail.asset.startsWith('nwjs-')) {\n        thing = 'NW.js';\n      } else if (detail.asset.startsWith('electron-')) {\n        thing = 'Electron';\n      } else if (detail.asset === 'webview-mac') {\n        thing = 'WKWebView';\n      } else if (detail.asset === 'steamworks.js') {\n        thing = 'Steamworks.js';\n      }\n      if (thing) {\n        task.setProgressText($_('progress.loadingLargeAsset').replace('{thing}', thing));\n      }\n      task.setProgress(detail.progress);\n    });\n    packager.addEventListener('zip-progress', ({detail}) => {\n      task.setProgressText($_('progress.compressingProject'));\n      task.setProgress(detail.progress);\n    });\n\n    const result = await packager.package();\n    result.blob = new Blob([result.data], {\n      type: result.type\n    });\n    result.url = URL.createObjectURL(result.blob);\n    return result;\n  };\n\n  const pack = async () => {\n    resetResult();\n    const task = new Task();\n    $options.csp = $options.custom.csp;\n    result = await task.do(runPackager(task, deepClone($options)));\n    task.done();\n    downloadURL(result.filename, result.url);\n  };\n\n  const preview = async () => {\n    resetResult();\n    previewer = new Preview();\n    const task = new Task();\n    const optionsClone = deepClone($options);\n    optionsClone.csp = optionsClone.custom.csp;\n    optionsClone.target = 'html';\n    try {\n      result = await task.do(runPackager(task, optionsClone));\n      task.done();\n      previewer.setContent(result.blob);\n    } catch (e) {\n      previewer.close();\n    }\n  };\n\n  const resetOptions = (properties) => {\n    for (const key of properties) {\n      let current = $options;\n      let defaults = defaultOptions;\n      const parts = key.split('.');\n      const lastPart = parts.pop();\n      for (const i of parts) {\n        current = current[i];\n        defaults = defaults[i];\n      }\n      current[lastPart] = deepClone(defaults[lastPart]);\n    }\n    $options = $options;\n  };\n\n  const resetAll = () => {\n    if (confirm($_('reset.confirmAll'))) {\n      resetOptions(Object.keys($options));\n      $icon = null;\n      $customCursorIcon = null;\n      $loadingScreenImage = null;\n    }\n  };\n\n  const exportOptions = async () => {\n    const exported = await recursivelySerializeBlobs($options);\n    const blob = new Blob([JSON.stringify(exported)], {\n      type: 'application/json'\n    });\n    const url = URL.createObjectURL(blob);\n    const formattedAppName = APP_NAME\n      .replace(/[^a-z0-9 ]/gi, '')\n      .replace(/ /g, '-')\n      .toLowerCase();\n    downloadURL(`${formattedAppName}-settings.json`, url);\n    URL.revokeObjectURL(url);\n  };\n    \n  const importOptions = async () => {\n    const input = document.createElement(\"input\");\n    input.type = 'file';\n    input.accept = '.json';\n    input.addEventListener('change', (e) => {\n      importOptionsFromDataTransfer(e.target);\n    });\n    document.body.appendChild(input);\n    input.click();\n    input.remove();\n  };\n\n  const importOptionsFromDataTransfer = async (dataTransfer) => {\n    const file = dataTransfer.files[0];\n    if (!file) {\n      // Should never happen.\n      return;\n    }\n    try {\n      const text = await readAsText(file);\n      const parsed = JSON.parse(text);\n      const deserialized = recursivelyDeserializeBlobs(parsed);\n      const copiedDefaultOptions = deepClone(defaultOptions);\n      const mergedWithDefaults = merge(deserialized, copiedDefaultOptions);\n\n      const isUnsafe = Packager.usesUnsafeOptions(mergedWithDefaults);\n      if (!isUnsafe || confirm($_('options.confirmImportUnsafe'))) {\n        setOptions(mergedWithDefaults);\n      }\n    } catch (e) {\n      $error = e;\n    }\n  };\n\n  onDestroy(() => {\n    if (result) {\n      URL.revokeObjectURL(result.url);\n    }\n  });\n</script>\n\n<style>\n  .option {\n    display: block;\n    margin: 4px 0;\n  }\n  .group {\n    margin: 12px 0;\n  }\n  p {\n    margin: 8px 0;\n  }\n  .group:last-child, .option:last-child, p:last-child {\n    margin-bottom: 0;\n  }\n  textarea {\n    box-sizing: border-box;\n    width: 100%;\n    min-width: 100%;\n    height: 150px;\n  }\n  input[type=\"text\"] {\n    width: 200px;\n  }\n  input[type=\"text\"].shorter {\n    width: 150px;\n  }\n  input[type=\"number\"] {\n    width: 50px;\n  }\n  input:invalid, .version:placeholder-shown {\n    outline: 2px solid red;\n  }\n  .warning {\n    font-weight: bold;\n    background: yellow;\n    color: black;\n    padding: 10px;\n    border-radius: 10px;\n  }\n  .buttons {\n    display: flex;\n  }\n  .button {\n    margin-right: 4px;\n  }\n  .side-buttons {\n    display: flex;\n    margin-left: auto;\n  }\n</style>\n\n<Section\n  accent=\"#FFAB19\"\n  reset={() => {\n    resetOptions([\n      'turbo',\n      'framerate',\n      'interpolation',\n      'highQualityPen',\n      'maxClones',\n      'fencing',\n      'miscLimits',\n      'stageWidth',\n      'stageHeight',\n      'resizeMode',\n      'username'\n    ]);\n  }}\n>\n  <div>\n    <h2>{$_('options.runtimeOptions')}</h2>\n\n    {#if hasSettingsStoredInProject}\n      <div class=\"group\">\n        {$_('options.storedWarning')}\n      </div>\n    {/if}\n\n    <label class=\"option\">\n      <input type=\"checkbox\" bind:checked={$options.turbo}>\n      {$_('options.turbo')}\n    </label>\n    <div class=\"option\">\n      <label>\n        {$_('options.framerate')}\n        <input type=\"number\" min=\"0\" max=\"240\" bind:value={$options.framerate}>\n      </label>\n      <LearnMore slug=\"custom-fps\" />\n    </div>\n    <div class=\"option\">\n      <label>\n        <input type=\"checkbox\" bind:checked={$options.interpolation}>\n        {$_('options.interpolation')}\n      </label>\n      <LearnMore slug=\"interpolation\" />\n    </div>\n    <div class=\"option\">\n      <label>\n        <input type=\"checkbox\" bind:checked={$options.highQualityPen}>\n        {$_('options.highQualityPen')}\n      </label>\n      <LearnMore slug=\"high-quality-pen\" />\n    </div>\n    <div class=\"option\">\n      <label>\n        <input type=\"checkbox\" checked={$options.maxClones === ALMOST_INFINITY} on:change={(e) => {\n          $options.maxClones = e.target.checked ? ALMOST_INFINITY : 300;\n        }}>\n        {$_('options.infiniteClones')}\n      </label>\n      <LearnMore slug=\"infinite-clones\" />\n    </div>\n    <div class=\"option\">\n      <label>\n        <input type=\"checkbox\" checked={!$options.fencing} on:change={(e) => {\n          $options.fencing = !e.target.checked;\n        }}>\n        {$_('options.removeFencing')}\n      </label>\n      <LearnMore slug=\"remove-fencing\" />\n    </div>\n    <div class=\"option\">\n      <label>\n        <input type=\"checkbox\" checked={!$options.miscLimits} on:change={(e) => {\n          $options.miscLimits = !e.target.checked;\n        }}>\n        {$_('options.removeMiscLimits')}\n      </label>\n      <LearnMore slug=\"remove-misc-limits\" />\n    </div>\n    <label class=\"option\">\n      {$_('options.username')}\n      <input type=\"text\" class=\"shorter\" bind:value={$options.username}>\n    </label>\n    {#if $options.username !== defaultOptions.username && cloudVariables.length !== 0}\n      <p class=\"warning\">\n        {$_('options.customUsernameWarning')}\n      </p>\n    {/if}\n    <label class=\"option\">\n      <input type=\"checkbox\" bind:checked={$options.closeWhenStopped}>\n      {$_('options.closeWhenStopped')}\n    </label>\n\n    <h3>{$_('options.stage')}</h3>\n    <label class=\"option\">\n      {$_('options.stageSize')}\n      <input type=\"number\" min=\"1\" max=\"4096\" step=\"1\" bind:value={$options.stageWidth}>\n      &times;\n      <input type=\"number\" min=\"1\" max=\"4096\" step=\"1\" bind:value={$options.stageHeight}>\n      <LearnMore slug=\"custom-stage-size\" />\n    </label>\n    <div class=\"group\">\n      <label class=\"option\">\n        <input type=\"radio\" name=\"resize-mode\" value=\"preserve-ratio\" bind:group={$options.resizeMode}>\n        {$_('options.preserveRatio')}\n      </label>\n      <label class=\"option\">\n        <input type=\"radio\" name=\"resize-mode\" value=\"stretch\" bind:group={$options.resizeMode}>\n        {$_('options.stretch')}\n      </label>\n      <label class=\"option\">\n        <input type=\"radio\" name=\"resize-mode\" value=\"dynamic-resize\" bind:group={$options.resizeMode}>\n        {$_('options.dynamicResize')}\n        <LearnMore slug=\"packager/dynamic-stage-resize\" />\n      </label>\n    </div>\n  </div>\n</Section>\n\n<Section\n  accent=\"#9966FF\"\n  reset={() => {\n    $icon = null;\n    $loadingScreenImage = null;\n    resetOptions([\n      'app.windowTitle',\n      'loadingScreen',\n      'autoplay',\n      'controls',\n      'appearance',\n      'monitors',\n    ]);\n  }}\n>\n  <div>\n    <h2>{$_('options.playerOptions')}</h2>\n\n    <label class=\"option\">\n      {$_('options.pageTitle')}\n      <input type=\"text\" bind:value={$options.app.windowTitle}>\n    </label>\n    <div class=\"option\">\n      {$_('options.icon')}\n      <ImageInput bind:file={$icon} previewSizes={[[64, 64], [32, 32], [16, 16]]} />\n    </div>\n\n    <h3>{$_('options.loadingScreen')}</h3>\n    <label class=\"option\">\n      <input type=\"checkbox\" bind:checked={$options.loadingScreen.progressBar}>\n      {$_('options.showProgressBar')}\n    </label>\n    <label class=\"option\">\n      {$_('options.loadingScreenText')}\n      <input type=\"text\" bind:value={$options.loadingScreen.text} placeholder={$_('options.loadingScreenTextPlaceholder')}>\n    </label>\n    <div class=\"option\">\n      {$_('options.loadingScreenImage')}\n      <!-- Display preview at image's native size -->\n      <ImageInput bind:file={$loadingScreenImage} previewSizes={[['', '']]} />\n    </div>\n    {#if $loadingScreenImage}\n      <label class=\"option\">\n        <input type=\"radio\" name=\"loading-screen-mode\" value=\"normal\" bind:group={$options.loadingScreen.imageMode}>\n        {$_('options.sizeNormal')}\n      </label>\n      <label class=\"option\">\n        <input type=\"radio\" name=\"loading-screen-mode\" value=\"stretch\" bind:group={$options.loadingScreen.imageMode}>\n        {$_('options.sizeStretch')}\n      </label>\n    {/if}\n\n    <h3>{$_('options.controls')}</h3>\n    <div class=\"group\">\n      <label class=\"option\">\n        <input type=\"checkbox\" bind:checked={$options.autoplay}>\n        {$_('options.autoplay')}\n      </label>\n      {#if $options.autoplay}\n        {$_('options.autoplayHint')}\n      {/if}\n    </div>\n    <label class=\"option\">\n      <input type=\"checkbox\" bind:checked={$options.controls.greenFlag.enabled}>\n      {$_('options.showFlag')}\n    </label>\n    <label class=\"option\">\n      <input type=\"checkbox\" bind:checked={$options.controls.stopAll.enabled}>\n      {$_('options.showStop')}\n    </label>\n    <label class=\"option\">\n      <input type=\"checkbox\" bind:checked={$options.controls.pause.enabled}>\n      {$_('options.showPause')}\n    </label>\n    <label class=\"option\">\n      <input type=\"checkbox\" bind:checked={$options.controls.fullscreen.enabled}>\n      {$_('options.showFullscreen')}\n    </label>\n    <p>{$_('options.controlsHelp')}</p>\n\n    <h3>{$_('options.colors')}</h3>\n    <!-- svelte-ignore a11y-label-has-associated-control -->\n    <label class=\"option\">\n      <ColorPicker bind:value={$options.appearance.background} />\n      {$_('options.backgroundColor')}\n    </label>\n    <!-- svelte-ignore a11y-label-has-associated-control -->\n    <label class=\"option\">\n      <ColorPicker bind:value={$options.appearance.foreground} />\n      {$_('options.foregroundColor')}\n    </label>\n    <!-- svelte-ignore a11y-label-has-associated-control -->\n    <label class=\"option\">\n      <ColorPicker bind:value={$options.appearance.accent} />\n      {$_('options.accentColor')}\n    </label>\n\n    <h3>{$_('options.monitors')}</h3>\n    <label class=\"option\">\n      <input type=\"checkbox\" bind:checked={$options.monitors.editableLists}>\n      {$_('options.editableLists')}\n    </label>\n    <!-- svelte-ignore a11y-label-has-associated-control -->\n    <label class=\"option\">\n      <ColorPicker bind:value={$options.monitors.variableColor} />\n      {$_('options.variableColor')}\n    </label>\n    <!-- svelte-ignore a11y-label-has-associated-control -->\n    <label class=\"option\">\n      <ColorPicker bind:value={$options.monitors.listColor} />\n      {$_('options.listColor')}\n    </label>\n  </div>\n</Section>\n\n<Section\n  accent=\"#4CBFE6\"\n  reset={() => {\n    $customCursorIcon = null;\n    resetOptions([\n      'cursor',\n      'chunks',\n    ]);\n  }}\n>\n  <div>\n    <h2>{$_('options.interaction')}</h2>\n    <div class=\"group\">\n      <label class=\"option\">\n        <input type=\"radio\" name=\"cursor-type\" bind:group={$options.cursor.type} value=\"auto\">\n        {$_('options.normalCursor')}\n      </label>\n      <label class=\"option\">\n        <input type=\"radio\" name=\"cursor-type\" bind:group={$options.cursor.type} value=\"none\">\n        {$_('options.noCursor')}\n      </label>\n      <label class=\"option\">\n        <input type=\"radio\" name=\"cursor-type\" bind:group={$options.cursor.type} value=\"custom\">\n        {$_('options.customCursor')}\n      </label>\n    </div>\n    {#if $options.cursor.type === 'custom'}\n      <div in:slide|self class=\"option\">\n        <ImageInput bind:file={$customCursorIcon} previewSizes={[[32, 32], [16, 16]]} />\n        <p>{$_('options.cursorHelp')}</p>\n        <label class=\"option\">\n          {$_('options.cursorCenter')}\n          <!-- X: and Y: intentionally not translated -->\n          X: <input type=\"number\" min=\"0\" bind:value={$options.cursor.center.x}>\n          Y: <input type=\"number\" min=\"0\" bind:value={$options.cursor.center.y}>\n          <button\n            on:click={automaticallyCenterCursor}\n            disabled={!$customCursorIcon}\n          >\n            {$_('options.automaticallyCenter')}\n          </button>\n        </label>\n      </div>\n    {/if}\n\n    <div class=\"group\">\n      <label class=\"option\">\n        <input type=\"checkbox\" bind:checked={$options.chunks.pointerlock}>\n        {$_('options.pointerlock')}\n      </label>\n      <a href=\"https://experiments.turbowarp.org/pointerlock/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        {$_('options.pointerlockHelp')}\n      </a>\n    </div>\n\n    <div class=\"group\">\n      <label class=\"option\">\n        <input type=\"checkbox\" bind:checked={$options.chunks.gamepad}>\n        {$_('options.gamepad')}\n      </label>\n      <a href=\"https://turbowarp.org/addons#gamepad\" target=\"_blank\" rel=\"noopener noreferrer\">\n        {$_('options.gamepadHelp')}\n      </a>\n    </div>\n  </div>\n</Section>\n\n<Section\n  accent=\"#FF8C1A\"\n  reset={cloudVariables.length === 0 ? null : () => {\n    resetOptions([\n      'cloudVariables'\n    ]);\n  }}\n>\n  <div>\n    <h2>{$_('options.cloudVariables')}</h2>\n\n    {#if cloudVariables.length > 0}\n      <label class=\"option\">\n        {$_('options.mode')}\n        <select bind:value={$options.cloudVariables.mode}>\n          <option value=\"ws\">{$_('options.cloudVariables-ws')}</option>\n          <option value=\"local\">{$_('options.cloudVariables-local')}</option>\n          <option value=\"\">{$_('options.cloudVariables-ignore')}</option>\n          <option value=\"custom\">{$_('options.cloudVariables-custom')}</option>\n        </select>\n      </label>\n\n      {#if $options.cloudVariables.mode === \"custom\"}\n        <div transition:fade|local>\n          {#each cloudVariables as variable}\n            <label class=\"option\">\n              <select bind:value={$options.cloudVariables.custom[variable]}>\n                <option value=\"ws\">{$_('options.cloudVariables-ws')}</option>\n                <option value=\"local\">{$_('options.cloudVariables-local')}</option>\n                <option value=\"\">{$_('options.cloudVariables-ignore')}</option>\n              </select>\n              {variable}\n            </label>\n          {/each}\n        </div>\n      {/if}\n\n      {#if $options.cloudVariables.mode === 'ws' || $options.cloudVariables.mode === 'custom'}\n        <div transition:fade|local>\n          <label class=\"option\">\n            {$_('options.cloudVariablesHost')}\n            <!-- Examples of valid values: -->\n            <!-- wss://clouddata.turbowarp.org -->\n            <!-- ws:localhost:8080 -->\n            <input type=\"text\" bind:value={$options.cloudVariables.cloudHost} pattern=\"wss?:.*\">\n          </label>\n        </div>\n      {/if}\n\n      <p>{$_('options.cloudVariables-ws-help')}</p>\n      <p>{$_('options.cloudVariables-local-help')}</p>\n      <p>{$_('options.cloudVariables-ignore-help')}</p>\n      <p>{$_('options.cloudVariables-custom-help')}</p>\n\n      <div class=\"option\">\n        <label>\n          <input type=\"checkbox\" bind:checked={$options.cloudVariables.specialCloudBehaviors}>\n          {$_('options.specialCloudBehaviors')}\n        </label>\n        <LearnMore slug=\"packager/special-cloud-behaviors\" />\n      </div>\n\n      <div class=\"option\">\n        <label>\n          <input type=\"checkbox\" bind:checked={$options.cloudVariables.unsafeCloudBehaviors}>\n          {$_('options.unsafeCloudBehaviors')}\n        </label>\n        <LearnMore slug=\"packager/special-cloud-behaviors#eval\" />\n      </div>\n      {#if $options.cloudVariables.unsafeCloudBehaviors}\n        <p class=\"warning\">{$_('options.unsafeCloudBehaviorsWarning')}</p>\n      {/if}\n      <p>{$_('options.implicitCloudHint').replace('{cloud}', '☁')}</p>\n    {:else}\n      <p>{$_('options.noCloudVariables')}</p>\n    {/if}\n  </div>\n</Section>\n\n<Section\n  accent=\"#FF6680\"\n  reset={() => {\n    resetOptions([\n      'compiler',\n      'extensions',\n      'bakeExtensions',\n      'custom',\n      'projectId',\n      'maxTextureDimension'\n    ]);\n  }}\n>\n  <div>\n    <h2>{$_('options.advancedOptions')}</h2>\n    <details open={advancedOptionsInitiallyOpen}>\n      <summary>{$_('options.advancedSummary')}</summary>\n\n      <div class=\"option\">\n        <label>\n          <input type=\"checkbox\" bind:checked={$options.compiler.enabled}>\n          {$_('options.enableCompiler')}\n        </label>\n        <LearnMore slug=\"disable-compiler\" />\n      </div>\n      <div class=\"option\">\n        <label>\n          <input type=\"checkbox\" bind:checked={$options.compiler.warpTimer}>\n          {$_('options.warpTimer')}\n        </label>\n        <LearnMore slug=\"warp-timer\" />\n      </div>\n\n      <!-- Ignore because CustomExtensions will have a <textarea> inside it -->\n      <!-- svelte-ignore a11y-label-has-associated-control -->\n      <label class=\"option\">\n        {$_('options.customExtensions')}\n        <!-- TODO: use the user-facing documentation when that becomes available -->\n        <LearnMore slug=\"development/custom-extensions\" />\n        <CustomExtensions bind:extensions={$options.extensions} />\n        <p class=\"warning\">{$_('options.customExtensionsSecurity')}</p>\n      </label>\n\n      <label class=\"option\">\n        <input type=\"checkbox\" bind:checked={$options.bakeExtensions}>\n        {$_('options.bakeExtensions')}\n      </label>\n\n      <label class=\"option\">\n        {$_('options.customCSS')}\n        <textarea bind:value={$options.custom.css}></textarea>\n      </label>\n      <label class=\"option\">\n        {$_('options.customJS')}\n        <textarea bind:value={$options.custom.js}></textarea>\n      </label>\n\n      <label class=\"option\">\n        {$_('options.customCSP')}\n        <input type=\"text\" bind:value={$options.custom.csp}>\n      </label>\n\n      <label class=\"option\">\n        {$_('options.projectId')}\n        <input type=\"text\" bind:value={$options.projectId}>\n      </label>\n      <p>{$_('options.projectIdHelp')}</p>\n\n      <label class=\"option\">\n        <input type=\"checkbox\" bind:checked={$options.packagedRuntime} />\n        {$_('options.packagedRuntime')}\n      </label>\n\n      <label class=\"option\">\n        <input type=\"checkbox\" checked={$options.maxTextureDimension !== defaultOptions.maxTextureDimension} on:change={(e) => {\n          $options.maxTextureDimension = defaultOptions.maxTextureDimension * (e.target.checked ? 2 : 1);\n        }} />\n        {$_('options.maxTextureDimension')}\n      </label>\n    </details>\n  </div>\n</Section>\n\n<Section\n  accent=\"#0FBD8C\"\n  reset={() => {\n    resetOptions([\n      'target'\n    ])\n  }}\n>\n  <div>\n    <h2>{$_('options.environment')}</h2>\n\n    <div class=\"group\">\n      <label class=\"option\">\n        <input type=\"radio\" name=\"environment\" bind:group={$options.target} value=\"html\">\n        {$_('options.html')}\n      </label>\n      <label class=\"option\">\n        <input type=\"radio\" name=\"environment\" bind:group={$options.target} value=\"zip\">\n        {$_('options.zip')}\n      </label>\n    </div>\n\n    <div class=\"group\">\n      <label class=\"option\">\n        <input type=\"radio\" name=\"environment\" bind:group={$options.target} value=\"electron-win32\">\n        {$_('options.application-win32').replace('{type}', 'Electron')}\n      </label>\n      <label class=\"option\">\n        <input type=\"radio\" name=\"environment\" bind:group={$options.target} value=\"webview-mac\">\n        {$_('options.application-mac').replace('{type}', 'WKWebView')}\n      </label>\n      <label class=\"option\">\n        <input type=\"radio\" name=\"environment\" bind:group={$options.target} value=\"electron-linux64\">\n        {$_('options.application-linux64').replace('{type}', 'Electron')}\n      </label>\n    </div>\n\n    <details open={otherEnvironmentsInitiallyOpen}>\n      <summary>{$_('options.otherEnvironments')}</summary>\n      <p>{$_('options.otherEnvironmentsHelp')}</p>\n      <div class=\"group\">\n        <label class=\"option\">\n          <input type=\"radio\" name=\"environment\" bind:group={$options.target} value=\"zip-one-asset\">\n          {$_('options.zip-one-asset')}\n        </label>\n      </div>\n      <div class=\"group\">\n        <label class=\"option\">\n          <input type=\"radio\" name=\"environment\" bind:group={$options.target} value=\"electron-win64\">\n          {$_('options.application-win64').replace('{type}', 'Electron')}\n        </label>\n        <label class=\"option\">\n          <input type=\"radio\" name=\"environment\" bind:group={$options.target} value=\"electron-win-arm\">\n          {$_('options.application-win-arm').replace('{type}', 'Electron')}\n        </label>\n        <label class=\"option\">\n          <input type=\"radio\" name=\"environment\" bind:group={$options.target} value=\"electron-mac\">\n          {$_('options.application-mac').replace('{type}', 'Electron')}\n        </label>\n        <label class=\"option\">\n          <input type=\"radio\" name=\"environment\" bind:group={$options.target} value=\"electron-linux-arm32\">\n          {$_('options.application-linux-arm32').replace('{type}', 'Electron')}\n        </label>\n        <label class=\"option\">\n          <input type=\"radio\" name=\"environment\" bind:group={$options.target} value=\"electron-linux-arm64\">\n          {$_('options.application-linux-arm64').replace('{type}', 'Electron')}\n        </label>  \n      </div>\n\n      <div class=\"group\">\n        <label class=\"option\">\n          <input type=\"radio\" name=\"environment\" bind:group={$options.target} value=\"nwjs-win32\">\n          {$_('options.application-win32').replace('{type}', 'NW.js')}\n        </label>\n        <label class=\"option\">\n          <input type=\"radio\" name=\"environment\" bind:group={$options.target} value=\"nwjs-win64\">\n          {$_('options.application-win64').replace('{type}', 'NW.js')}\n        </label>\n        <label class=\"option\">\n          <input type=\"radio\" name=\"environment\" bind:group={$options.target} value=\"nwjs-mac\">\n          {$_('options.application-mac').replace('{type}', 'NW.js')}\n        </label>\n        <label class=\"option\">\n          <input type=\"radio\" name=\"environment\" bind:group={$options.target} value=\"nwjs-linux-x64\">\n          {$_('options.application-linux64').replace('{type}', 'NW.js')}\n        </label>\n      </div>\n    </details>\n  </div>\n</Section>\n\n{#if $options.target !== 'html'}\n  <div in:fade|local>\n    <Section\n      accent=\"#FF661A\"\n      reset={$options.target.startsWith('zip') ? null : () => {\n        resetOptions([\n          'app.packageName',\n          'app.windowMode',\n          'app.escapeBehavior'\n        ]);\n      }}\n    >\n      <div>\n        {#if $options.target.startsWith('zip')}\n          <h2>Zip</h2>\n          <p>The zip environment is intended to be used for publishing to a website. Other uses such as sending your project to a friend over a chat app or email should use \"Plain HTML\" instead as zip will not work.</p>\n        {:else}\n          <h2>{$_('options.applicationSettings')}</h2>\n          <label class=\"option\">\n            {$_('options.packageName')}\n            <input type=\"text\" bind:value={$options.app.packageName} pattern=\"[\\w \\-]+\" minlength=\"1\">\n          </label>\n          <p>{$_('options.packageNameHelp')}</p>\n\n          <label class=\"option\">\n            {$_('options.version')}\n            <input type=\"text\" class=\"version\" bind:value={$options.app.version} pattern=\"\\d+\\.\\d+\\.\\d+\" placeholder=\"1.0.0\" minlength=\"1\">\n          </label>\n          <p>{$_('options.versionHelp')}</p>\n\n          {#if $options.target.includes('electron')}\n            <label class=\"option\">\n              {$_('options.initalWindowSize')}\n              <select bind:value={$options.app.windowMode}>\n                <option value=\"window\">{$_('options.startWindow')}</option>\n                <option value=\"maximize\">{$_('options.startMaximized')}</option>\n                <option value=\"fullscreen\">{$_('options.startFullscreen')}</option>\n              </select>\n            </label>\n\n            <label class=\"option\">\n              {$_('options.escapeBehavior')}\n              <select bind:value={$options.app.escapeBehavior}>\n                <option value=\"unfullscreen-only\">{$_('options.unFullscreenOnly')}</option>\n                <option value=\"exit-only\">{$_('options.exitOnly')}</option>\n                <option value=\"unfullscreen-or-exit\">{$_('options.unFullscreenOrExit')}</option>\n                <option value=\"nothing\">{$_('options.doNothing')}</option>\n              </select>\n            </label>\n\n            <label class=\"option\">\n              {$_('options.windowControls')}\n              <select bind:value={$options.app.windowControls}>\n                <option value=\"default\">{$_('options.defaultControls')}</option>\n                <option value=\"frameless\">{$_('options.noControls')}</option>\n              </select>\n            </label>\n          {/if}\n\n          <div class=\"warning\">\n            <div>Creating native applications for specific platforms is discouraged. In most cases, Plain HTML or Zip will have numerous advantages:</div>\n            <ul>\n              <li>Can be run directly from a website on any platform, even phones</li>\n              <li>Users are significantly less likely to be suspicious of a virus</li>\n              <li>Significantly smaller file size</li>\n              <li>Can still be downloaded locally and run offline</li>\n            </ul>\n            <div>If you don't truly need to make a self-contained application for each platform (we understand there are some cases where this is necessary), we recommend you don't.</div>\n          </div>\n\n          {#if $options.target.includes('win')}\n            <div>\n              <h2>Windows</h2>\n              <p>All Windows applications generated by this site are unsigned, so users will see SmartScreen warnings when they try to run it for the first time. They can bypass these warnings by pressing \"More info\" then \"Run anyways\".</p>\n              <p>To change the icon of the executable file or create an installer program, download and run <a href=\"https://github.com/TurboWarp/packager-extras/releases\">TurboWarp Packager Extras</a> and select the output of this website.</p>\n            </div>\n          {:else if $options.target.includes('mac')}\n            <div>\n              <h2>macOS</h2>\n              <p>Due to Apple policy, packaging for their platforms is troublesome. You either have to:</p>\n              <ul>\n                <li>Instruct users to ignore scary Gatekeeper warnings by opening Finder > Navigating to the application > Right click > Open > Open. This website generates applications that require this workaround.</li>\n                <li>Or pay Apple $100/year for a developer account to sign and notarize the app (very involved process; reach out in feedback for more information)</li>\n              </ul>\n            </div>\n          {:else if $options.target.includes('linux')}\n            <div>\n              <h2>Linux</h2>\n              <p>Linux support is still experimental.</p>\n            </div>\n          {/if}\n\n          {#if $options.target.includes('electron')}\n            <div>\n              <h2>Electron</h2>\n              <p>The Electron environment works by embedding a copy of Chromium (the open source part of Google Chrome) along with your project, which means the app will be very large.</p>\n\n              {#if $options.target.includes('win')}\n                {#if $options.target.includes('32')}\n                  <p>Note: You have selected the 32-bit or 64-bit mode. This maximizes device compatibility but limits the amount of memory the app can use. If you encounter crashes, try going into \"Other environments\" and using the 64-bit only mode instead.</p>\n                {/if}\n              {:else if $options.target.includes('mac')}\n                <p>On macOS, the app will run natively on both Intel Silicon and Apple Silicon Macs.</p>\n              {:else if $options.target.includes('linux')}\n                <p>On Linux, the application can be started by running <code>start.sh</code></p>\n              {/if}\n            </div>\n          {:else if $options.target.includes('nwjs')}\n            <div>\n              <h2>NW.js</h2>\n              <p class=\"warning\">NW.js support is deprecated and may be removed in the future. Use the Electron environments instead. They're better in every way.</p>\n              <p>The NW.js environment works by embedding a copy of Chromium (the open source part of Google Chrome) along with your project, which means the app will be very large.</p>\n              <p>For further help and steps, see <a href=\"https://docs.nwjs.io/en/latest/For%20Users/Package%20and%20Distribute/#linux\">NW.js Documentation</a>.</p>\n              {#if $options.target.includes('mac')}\n                <p>On macOS, the app will run using Rosetta on Apple Silicon Macs.</p>\n              {/if}\n            </div>\n          {:else if $options.target.includes('webview-mac')}\n            <div>\n              <h2>WKWebView</h2>\n              <p>WKWebView is the preferred way to package for macOS. It will be hundreds of MB smaller than the other macOS-specific environments and typically run the fastest.</p>\n              <p>The app will run natively on both Intel and Apple silicon Macs running macOS 10.13 or later.</p>\n              <p>Note that:</p>\n              <ul>\n                <li>Video sensing and loudness blocks will only work in macOS 12 or later.</li>\n                <li>Pointer lock will not work.</li>\n                <li>Extremely large projects might not work properly.</li>\n              </ul>\n              <p>Use the \"Electron macOS Application\" (inside Other environments) or \"Plain HTML\" environments instead if you encounter these issues.</p>\n            </div>\n          {/if}\n        {/if}\n      </div>\n    </Section>\n  </div>\n{/if}\n\n{#if projectData.project.analysis.usesSteamworks}\n  <Section\n    accent=\"#136C9F\"\n    reset={() => {\n      resetOptions([\n        'steamworks'\n      ]);\n    }}\n  >\n    <h2>{$_('options.steamworksExtension')}</h2>\n    {#if ['electron-win64', 'electron-linux64', 'electron-mac'].includes($options.target)}\n      <p>{$_('options.steamworksAvailable').replace('{n}', '480')}</p>\n      <label class=\"option\">\n        {$_('options.steamworksAppId')}\n        <input pattern=\"\\d+\" minlength=\"1\" bind:value={$options.steamworks.appId}>\n      </label>\n      <label class=\"option\">\n        {$_('options.steamworksOnError')}\n        <select bind:value={$options.steamworks.onError}>\n          <option value=\"ignore\">{$_('options.steamworksIgnore')}</option>\n          <option value=\"warning\">{$_('options.steamworksWarning')}</option>\n          <option value=\"error\">{$_('options.steamworksError')}</option>\n        </select>\n      </label>\n\n      {#if $options.target === 'electron-mac'}\n        <p class=\"warning\">\n          {$_('options.steamworksMacWarning')}\n        </p>\n      {/if}\n    {:else}\n      <p>{$_('options.steamworksUnavailable')}</p>\n      <ul>\n        <li>{$_('options.application-win64').replace('{type}', 'Electron')}</li>\n        <li>\n          {$_('options.application-mac').replace('{type}', 'Electron')}\n          <br>\n          {$_('options.steamworksMacWarning')}\n        </li>\n        <li>{$_('options.application-linux64').replace('{type}', 'Electron')}</li>\n      </ul>\n    {/if}\n\n    <p>\n      <a href=\"https://extensions.turbowarp.org/steamworks\">{$_('options.steamworksDocumentation')}</a>\n    </p>\n  </Section>\n{/if}\n\n<Section>\n  <DropArea on:drop={(e) => importOptionsFromDataTransfer(e.detail)}>\n    <div class=\"buttons\">\n      <div class=\"button\">\n        <Button on:click={exportOptions} secondary text={$_('options.export')} />\n      </div>\n      <div class=\"button\">\n        <Button on:click={importOptions} secondary text={$_('options.import')} />\n      </div>\n      <div class=\"side-buttons\">\n        <Button on:click={resetAll} dangerous text={$_('options.resetAll')} />\n      </div>\n    </div>\n  </DropArea>\n</Section>\n\n<Section>\n  <div class=\"buttons\">\n    <div class=\"button\">\n      <Button on:click={pack} text={$_('options.package')} />\n    </div>\n    <div clas=\"button\">\n      <Button on:click={preview} secondary text={$_('options.preview')} />\n    </div>\n  </div>\n</Section>\n\n{#if result}\n  <Downloads\n    name={result ? result.filename : null}\n    url={result ? result.url : null}\n    blob={result ? result.blob : null}\n  />\n{:else if !$progress.visible}\n  <Section caption>\n    <p>{$_('options.downloadsWillAppearHere')}</p>\n  </Section>\n{/if}\n"],"sourceRoot":""}